-----> Starting Kitchen (v1.4.2)
-----> Creating <default-ubuntu-1404>...
       Bringing machine 'default' up with 'virtualbox' provider...
       ==> default: Importing base box 'opscode-ubuntu-14.04'...
       [KProgress: 30%[KProgress: 40%[KProgress: 60%[KProgress: 70%[KProgress: 80%[KProgress: 90%[K==> default: Matching MAC address for NAT networking...
       ==> default: Setting the name of the VM: kitchen-patchdashboard-default-ubuntu-1404_default_1455406515577_38455
       ==> default: Fixed port collision for 22 => 2222. Now on port 2200.
       ==> default: Clearing any previously set network interfaces...
       ==> default: Preparing network interfaces based on configuration...
           default: Adapter 1: nat
       ==> default: Forwarding ports...
           default: 22 => 2200 (adapter 1)
       ==> default: Booting VM...
       ==> default: Waiting for machine to boot. This may take a few minutes...
           default: SSH address: 127.0.0.1:2200
           default: SSH username: vagrant
           default: SSH auth method: private key
           default: Warning: Connection timeout. Retrying...
           default: 
           default: Vagrant insecure key detected. Vagrant will automatically replace
           default: this with a newly generated keypair for better security.
           default: 
           default: Inserting generated public key within guest...
           default: Removing insecure key from the guest if it's present...
           default: Key inserted! Disconnecting and reconnecting using new SSH key...
       ==> default: Machine booted and ready!
       GuestAdditions versions on your host (5.0.14) and guest (4.3.14) do not match.
       stdin: is not a tty
       Reading package lists...Building dependency tree...Reading state information...The following extra packages will be installed:
         cpp fakeroot gcc libfakeroot linux-headers-3.13.0-24 patch
       Suggested packages:
         cpp-doc dpkg-dev debhelper gcc-multilib manpages-dev autoconf automake1.9
         libtool flex bison gdb gcc-doc diffutils-doc
       The following NEW packages will be installed:
         cpp dkms fakeroot gcc libfakeroot linux-headers-3.13.0-24
         linux-headers-3.13.0-24-generic patch
       0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
       Need to get 9,834 kB of archives.
       After this operation, 77.6 MB of additional disk space will be used.
       Get:1 http://us.archive.ubuntu.com/ubuntu/ trusty/main cpp amd64 4:4.8.2-1ubuntu6 [27.5 kB]
       Get:2 http://us.archive.ubuntu.com/ubuntu/ trusty/main gcc amd64 4:4.8.2-1ubuntu6 [5,098 B]
       Err http://us.archive.ubuntu.com/ubuntu/ trusty-updates/main patch amd64 2.7.1-4ubuntu1
         404  Not Found [IP: 91.189.91.13 80]
       Get:3 http://us.archive.ubuntu.com/ubuntu/ trusty/main dkms all 2.2.0.3-1.1ubuntu5 [64.4 kB]
       Get:4 http://us.archive.ubuntu.com/ubuntu/ trusty/main libfakeroot amd64 1.20-3ubuntu2 [25.4 kB]
       Get:5 http://us.archive.ubuntu.com/ubuntu/ trusty/main fakeroot amd64 1.20-3ubuntu2 [55.0 kB]
       Get:6 http://us.archive.ubuntu.com/ubuntu/ trusty-updates/main linux-headers-3.13.0-24 all 3.13.0-24.47 [8,865 kB]
       Get:7 http://us.archive.ubuntu.com/ubuntu/ trusty-updates/main linux-headers-3.13.0-24-generic amd64 3.13.0-24.47 [708 kB]
       Fetched 9,750 kB in 9s (1,034 kB/s)
       E: Failed to fetch http://us.archive.ubuntu.com/ubuntu/pool/main/p/patch/patch_2.7.1-4ubuntu1_amd64.deb  404  Not Found [IP: 91.189.91.13 80]
       E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?stdin: is not a tty
       Get:1 http://security.ubuntu.com trusty-security InRelease [65.9 kB]
       Ign http://us.archive.ubuntu.com trusty InRelease
       Get:2 http://us.archive.ubuntu.com trusty-updates InRelease [65.9 kB]
       Get:3 http://security.ubuntu.com trusty-security/main Sources [103 kB]
       Get:4 http://us.archive.ubuntu.com trusty-backports InRelease [64.5 kB]
       Hit http://us.archive.ubuntu.com trusty Release.gpg
       Get:5 http://security.ubuntu.com trusty-security/restricted Sources [4,035 B]
       Get:6 http://us.archive.ubuntu.com trusty-updates/main Sources [250 kB]
       Get:7 http://security.ubuntu.com trusty-security/universe Sources [33.0 kB]
       Get:8 http://security.ubuntu.com trusty-security/multiverse Sources [2,767 B]
       Get:9 http://security.ubuntu.com trusty-security/main amd64 Packages [416 kB]
       Get:10 http://us.archive.ubuntu.com trusty-updates/restricted Sources [5,342 B]
       Get:11 http://us.archive.ubuntu.com trusty-updates/universe Sources [148 kB]
       Get:12 http://us.archive.ubuntu.com trusty-updates/multiverse Sources [5,547 B]
       Get:13 http://security.ubuntu.com trusty-security/restricted amd64 Packages [13.0 kB]
       Get:14 http://us.archive.ubuntu.com trusty-updates/main amd64 Packages [696 kB]
       Get:15 http://security.ubuntu.com trusty-security/universe amd64 Packages [123 kB]
       Get:16 http://security.ubuntu.com trusty-security/multiverse amd64 Packages [4,990 B]
       Get:17 http://security.ubuntu.com trusty-security/main i386 Packages [389 kB]
       Get:18 http://security.ubuntu.com trusty-security/restricted i386 Packages [12.7 kB]
       Get:19 http://us.archive.ubuntu.com trusty-updates/restricted amd64 Packages [15.9 kB]
       Get:20 http://security.ubuntu.com trusty-security/universe i386 Packages [123 kB]
       Get:21 http://us.archive.ubuntu.com trusty-updates/universe amd64 Packages [336 kB]
       Get:22 http://security.ubuntu.com trusty-security/multiverse i386 Packages [5,164 B]
       Get:23 http://security.ubuntu.com trusty-security/main Translation-en [228 kB]
       Get:24 http://us.archive.ubuntu.com trusty-updates/multiverse amd64 Packages [13.2 kB]
       Get:25 http://us.archive.ubuntu.com trusty-updates/main i386 Packages [671 kB]
       Get:26 http://security.ubuntu.com trusty-security/multiverse Translation-en [2,570 B]
       Get:27 http://security.ubuntu.com trusty-security/restricted Translation-en [3,206 B]
       Get:28 http://security.ubuntu.com trusty-security/universe Translation-en [72.1 kB]
       Get:29 http://us.archive.ubuntu.com trusty-updates/restricted i386 Packages [15.6 kB]
       Get:30 http://us.archive.ubuntu.com trusty-updates/universe i386 Packages [337 kB]
       Get:31 http://us.archive.ubuntu.com trusty-updates/multiverse i386 Packages [13.4 kB]
       Get:32 http://us.archive.ubuntu.com trusty-updates/main Translation-en [352 kB]
       Get:33 http://us.archive.ubuntu.com trusty-updates/multiverse Translation-en [6,947 B]
       Get:34 http://us.archive.ubuntu.com trusty-updates/restricted Translation-en [3,699 B]
       Get:35 http://us.archive.ubuntu.com trusty-updates/universe Translation-en [179 kB]
       Get:36 http://us.archive.ubuntu.com trusty-backports/main Sources [8,236 B]
       Get:37 http://us.archive.ubuntu.com trusty-backports/restricted Sources [28 B]
       Get:38 http://us.archive.ubuntu.com trusty-backports/universe Sources [33.2 kB]
       Get:39 http://us.archive.ubuntu.com trusty-backports/multiverse Sources [1,898 B]
       Get:40 http://us.archive.ubuntu.com trusty-backports/main amd64 Packages [9,391 B]
       Get:41 http://us.archive.ubuntu.com trusty-backports/restricted amd64 Packages [28 B]
       Get:42 http://us.archive.ubuntu.com trusty-backports/universe amd64 Packages [39.8 kB]
       Get:43 http://us.archive.ubuntu.com trusty-backports/multiverse amd64 Packages [1,571 B]
       Get:44 http://us.archive.ubuntu.com trusty-backports/main i386 Packages [9,442 B]
       Get:45 http://us.archive.ubuntu.com trusty-backports/restricted i386 Packages [28 B]
       Get:46 http://us.archive.ubuntu.com trusty-backports/universe i386 Packages [39.8 kB]
       Get:47 http://us.archive.ubuntu.com trusty-backports/multiverse i386 Packages [1,552 B]
       Get:48 http://us.archive.ubuntu.com trusty-backports/main Translation-en [5,561 B]
       Get:49 http://us.archive.ubuntu.com trusty-backports/multiverse Translation-en [1,215 B]
       Get:50 http://us.archive.ubuntu.com trusty-backports/restricted Translation-en [14 B]
       Get:51 http://us.archive.ubuntu.com trusty-backports/universe Translation-en [34.6 kB]
       Hit http://us.archive.ubuntu.com trusty Release
       Hit http://us.archive.ubuntu.com trusty/main Sources
       Hit http://us.archive.ubuntu.com trusty/restricted Sources
       Hit http://us.archive.ubuntu.com trusty/universe Sources
       Hit http://us.archive.ubuntu.com trusty/multiverse Sources
       Hit http://us.archive.ubuntu.com trusty/main amd64 Packages
       Hit http://us.archive.ubuntu.com trusty/restricted amd64 Packages
       Hit http://us.archive.ubuntu.com trusty/universe amd64 Packages
       Hit http://us.archive.ubuntu.com trusty/multiverse amd64 Packages
       Hit http://us.archive.ubuntu.com trusty/main i386 Packages
       Hit http://us.archive.ubuntu.com trusty/restricted i386 Packages
       Hit http://us.archive.ubuntu.com trusty/universe i386 Packages
       Hit http://us.archive.ubuntu.com trusty/multiverse i386 Packages
       Hit http://us.archive.ubuntu.com trusty/main Translation-en
       Hit http://us.archive.ubuntu.com trusty/multiverse Translation-en
       Hit http://us.archive.ubuntu.com trusty/restricted Translation-en
       Hit http://us.archive.ubuntu.com trusty/universe Translation-en
       Ign http://us.archive.ubuntu.com trusty/main Translation-en_US
       Ign http://us.archive.ubuntu.com trusty/multiverse Translation-en_US
       Ign http://us.archive.ubuntu.com trusty/restricted Translation-en_US
       Ign http://us.archive.ubuntu.com trusty/universe Translation-en_US
       Fetched 4,965 kB in 8s (584 kB/s)
       stdin: is not a tty
       Reading package lists...Building dependency tree...Reading state information...The following extra packages will be installed:
         cpp fakeroot gcc libfakeroot linux-headers-3.13.0-24 patch
       Suggested packages:
         cpp-doc dpkg-dev debhelper gcc-multilib manpages-dev autoconf automake1.9
         libtool flex bison gdb gcc-doc diffutils-doc
       The following NEW packages will be installed:
         cpp dkms fakeroot gcc libfakeroot linux-headers-3.13.0-24
         linux-headers-3.13.0-24-generic patch
       0 upgraded, 8 newly installed, 0 to remove and 172 not upgraded.
       Need to get 152 kB/9,837 kB of archives.
       After this operation, 77.6 MB of additional disk space will be used.
       Get:1 http://us.archive.ubuntu.com/ubuntu/ trusty-updates/main patch amd64 2.7.1-4ubuntu2.3 [86.4 kB]
       Get:2 http://us.archive.ubuntu.com/ubuntu/ trusty-updates/main dkms all 2.2.0.3-1.1ubuntu5.14.04.5 [65.4 kB]
       dpkg-preconfigure: unable to re-open stdin: No such file or directory
       Fetched 152 kB in 0s (231 kB/s)
       Selecting previously unselected package cpp.
       (Reading database ... 32400 files and directories currently installed.)
       Preparing to unpack .../cpp_4%3a4.8.2-1ubuntu6_amd64.deb ...
       Unpacking cpp (4:4.8.2-1ubuntu6) ...
       Selecting previously unselected package gcc.
       Preparing to unpack .../gcc_4%3a4.8.2-1ubuntu6_amd64.deb ...
       Unpacking gcc (4:4.8.2-1ubuntu6) ...
       Selecting previously unselected package patch.
       Preparing to unpack .../patch_2.7.1-4ubuntu2.3_amd64.deb ...
       Unpacking patch (2.7.1-4ubuntu2.3) ...
       Selecting previously unselected package dkms.
       Preparing to unpack .../dkms_2.2.0.3-1.1ubuntu5.14.04.5_all.deb ...
       Unpacking dkms (2.2.0.3-1.1ubuntu5.14.04.5) ...
       Selecting previously unselected package libfakeroot:amd64.
       Preparing to unpack .../libfakeroot_1.20-3ubuntu2_amd64.deb ...
       Unpacking libfakeroot:amd64 (1.20-3ubuntu2) ...
       Selecting previously unselected package fakeroot.
       Preparing to unpack .../fakeroot_1.20-3ubuntu2_amd64.deb ...
       Unpacking fakeroot (1.20-3ubuntu2) ...
       Selecting previously unselected package linux-headers-3.13.0-24.
       Preparing to unpack .../linux-headers-3.13.0-24_3.13.0-24.47_all.deb ...
       Unpacking linux-headers-3.13.0-24 (3.13.0-24.47) ...
       Selecting previously unselected package linux-headers-3.13.0-24-generic.
       Preparing to unpack .../linux-headers-3.13.0-24-generic_3.13.0-24.47_amd64.deb ...
       Unpacking linux-headers-3.13.0-24-generic (3.13.0-24.47) ...
       Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
       Setting up cpp (4:4.8.2-1ubuntu6) ...
       Setting up gcc (4:4.8.2-1ubuntu6) ...
       Setting up patch (2.7.1-4ubuntu2.3) ...
       Setting up dkms (2.2.0.3-1.1ubuntu5.14.04.5) ...
       Setting up libfakeroot:amd64 (1.20-3ubuntu2) ...
       Setting up fakeroot (1.20-3ubuntu2) ...
       update-alternatives: using /usr/bin/fakeroot-sysv to provide /usr/bin/fakeroot (fakeroot) in auto modeSetting up linux-headers-3.13.0-24 (3.13.0-24.47) ...
       Setting up linux-headers-3.13.0-24-generic (3.13.0-24.47) ...
       Examining /etc/kernel/header_postinst.d.
       run-parts: executing /etc/kernel/header_postinst.d/dkms 3.13.0-24-generic /boot/vmlinuz-3.13.0-24-genericCopy iso file /Applications/VirtualBox.app/Contents/MacOS/VBoxGuestAdditions.iso into the box /tmp/VBoxGuestAdditions.iso
       stdin: is not a tty
       mount: block device /tmp/VBoxGuestAdditions.iso is write-protected, mounting read-only
       Installing Virtualbox Guest Additions 5.0.14 - guest version is 4.3.14
       stdin: is not a tty
       Verifying archive integrity... All good.
       Uncompressing VirtualBox 5.0.14 Guest Additions for Linux............VirtualBox Guest Additions installer
       Removing installed version 4.3.14 of VirtualBox Guest Additions...
       Copying additional installer modules ...
       Installing additional modules ...
       Removing existing VirtualBox DKMS kernel modules ...done.
       Removing existing VirtualBox non-DKMS kernel modules ...done.
       Building the VirtualBox Guest Additions kernel modules ...done.
       Doing non-kernel setup of the Guest Additions ...done.
       You should restart your guest to make sure the new modules are actually used
       Installing the Window System driversCould not find the X.Org or XFree86 Window System, skipping.
       An error occurred during installation of VirtualBox Guest Additions 5.0.14. Some functionality may not work as intended.
       In most cases it is OK that the "Window System drivers" installation failed.
       stdin: is not a tty
       Restarting VM to apply changes...
       ==> default: Attempting graceful shutdown of VM...
       ==> default: Booting VM...
       ==> default: Waiting for machine to boot. This may take a few minutes...
           default: SSH address: 127.0.0.1:2200
           default: SSH username: vagrant
           default: SSH auth method: private key
           default: Warning: Connection timeout. Retrying...
       ==> default: Machine booted and ready!
       ==> default: Checking for guest additions in VM...
       ==> default: Setting hostname...
       ==> default: Machine not provisioned because `--no-provision` is specified.
       [SSH] Established
       Vagrant instance <default-ubuntu-1404> created.
       Finished creating <default-ubuntu-1404> (2m9.75s).
-----> Converging <default-ubuntu-1404>...
       Preparing files for transfer
       Preparing dna.json
       Resolving cookbook dependencies with Berkshelf 3.3.0...
       Removing non-cookbook files before transfer
       Preparing data_bags
       Preparing solo.rb
-----> Installing Chef Omnibus (install only if missing)
       Downloading https://www.chef.io/chef/install.sh to file /tmp/install.sh
       Trying wget...
       Download complete.
       Getting information for chef stable  for ubuntu...
       downloading https://omnitruck-direct.chef.io/stable/chef/metadata?v=&p=ubuntu&pv=14.04&m=x86_64
         to file /tmp/install.sh.1311/metadata.txt
       trying wget...
       url	https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/14.04/x86_64/chef_12.7.2-1_amd64.deb
       md5	b7acab8f396f8bb12fe39f42b3277bed
       sha256	0f543f51116fb498cf683e73b005cdd8ed0c8147ca5d10163377d9c1ab6a2cde
       version	12.7.2downloaded metadata file looks valid...
       downloading https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/14.04/x86_64/chef_12.7.2-1_amd64.deb
         to file /tmp/install.sh.1311/chef_12.7.2-1_amd64.deb
       trying wget...
       Comparing checksum with sha256sum...
       
       WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
       
       You are installing an omnibus package without a version pin.  If you are installing
       on production servers via an automated process this is DANGEROUS and you will
       be upgraded without warning on new releases, even to new major releases.
       Letting the version float is only appropriate in desktop, test, development or
       CI/CD environments.
       
       WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
       
       Installing chef 
       installing with dpkg...
       Selecting previously unselected package chef.
       (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 57299 files and directories currently installed.)
       Preparing to unpack .../chef_12.7.2-1_amd64.deb ...
       Unpacking chef (12.7.2-1) ...
       Setting up chef (12.7.2-1) ...
       Thank you for installing Chef!
       Transferring files to <default-ubuntu-1404>
       Starting Chef Client, version 12.7.2
       Compiling Cookbooks...
       
       Converging 100 resources
       Recipe: patchdashboard::_apache
         * apt_package[apache] action install
           - install version 2.4.7-1ubuntu4.9 of package apache2
       
           - execute sudo a2enmod rewrite; service apache2 reload
       Recipe: apache2::default
         * apt_package[apache2] action install (up to date)
         * directory[/etc/apache2/sites-available] action create (up to date)
         * directory[/etc/apache2/sites-enabled] action create (up to date)
         * directory[/etc/apache2/mods-available] action create (up to date)
         * directory[/etc/apache2/mods-enabled] action create (up to date)
         * directory[/etc/apache2/conf-available] action create (up to date)
         * directory[/etc/apache2/conf-enabled] action create (up to date)
         * link[/etc/apache2/sites-enabled/default] action delete (up to date)
         * file[/etc/apache2/sites-available/default] action delete (up to date)
         * link[/etc/apache2/sites-enabled/default.conf] action delete (up to date)
         * file[/etc/apache2/sites-available/default.conf] action delete (up to date)
         * link[/etc/apache2/sites-enabled/000-default] action delete (up to date)
         * file[/etc/apache2/sites-available/000-default] action delete (up to date)
         * link[/etc/apache2/sites-enabled/000-default.conf] action delete
           - delete link at /etc/apache2/sites-enabled/000-default.conf
         * file[/etc/apache2/sites-available/000-default.conf] action delete
           - delete file /etc/apache2/sites-available/000-default.conf
         * directory[/etc/apache2/conf.d] action delete (up to date)
         * directory[/var/log/apache2] action create
           - change mode from '0750' to '0755'
         * apt_package[perl] action install (up to date)
         * link[/usr/sbin/a2ensite] action delete
           - delete link at /usr/sbin/a2ensite
         * template[/usr/sbin/a2ensite] action create
           - create new file /usr/sbin/a2ensite
           - update content in file /usr/sbin/a2ensite from none to ce53f4
           --- /usr/sbin/a2ensite	2016-02-13 23:37:46.441457091 +0000
           +++ /usr/sbin/.a2ensite20160213-1410-fjbcmj	2016-02-13 23:37:46.441457091 +0000
           @@ -1 +1,533 @@
           +#!/usr/bin/perl -w
           +#
           +# a2enmod by Stefan Fritsch <sf@debian.org>
           +# Licensed under Apache License 2.0
           +#
           +# The coding style is "perltidy -pbp"
           +
           +use strict;
           +use Cwd 'realpath';
           +use File::Spec;
       +use File::Basename;
           +use File::Path;
           +use Getopt::Long;
           +
           +my $quiet;
           +my $force;
           +my $maintmode;
           +my $purge;
           +
           +Getopt::Long::Configure('bundling');
           +GetOptions(
           +    'quiet|q'     => \$quiet,
           +    'force|f'     => \$force,
           +    'maintmode|m' => \$maintmode,
           +    'purge|p'     => \$purge
       
           +
           +my $basename = basename($0);
           +$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/
           +    or die "$basename call name unknown\n";
           +my $act        = $1;
           +my $obj        = $2;
           +my $dir_suffix = $3;
           +
           +my $env_file = $ENV{APACHE_ENVVARS}
           +    || (
       +    $ENV{APACHE_CONFDIR}
           +    ? "$ENV{APACHE_CONFDIR}/envvars"
           +    : "/etc/apache2$dir_suffix/envvars"
           +    );
           +$ENV{LANG} = 'C';
       
           +
           +$act .= 'able';
           +my ( $name, $dir, $sffx, $reload );
           +if ( $obj eq 'mod' ) {
           +    $obj    = 'module';
           +    $dir    = 'mods';
           +    $sffx   = '.load';
           +    $reload = 'restart';
           +}
           +elsif ( $obj eq 'conf' ) {
       +    $obj    = 'conf';
           +    $dir    = 'conf';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +else {
           +    $dir    = 'sites';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +$name = ucfirst($obj);
           +
           +my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";
       +my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }
           +    || "$confdir/$dir-available";
           +my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";
           +my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";
           +
           +$statedir .= "/$obj";
           +
           +my $choicedir = $act eq 'enable' ? $availdir : $enabldir;
           +my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );
           +
           +my $request_reload = 0;
           +
           +my $rc = 0;
           +
           +if ( !scalar @ARGV ) {
           +    my @choices = myglob('*');
           +    print "Your choices are: @choices\n";
           +    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";
           +    my $input = <>;
           +    @ARGV = split /\s+/, $input;
       +
           +}
           +
           +my @objs;
           +foreach my $arg (@ARGV) {
           +    $arg =~ s/${sffx}$//;
       +    my @glob = myglob($arg);
           +    if ( !@glob ) {
           +        error("No $obj found matching $arg!\n");
           +        $rc = 1;
           +    }
           +    else {
       
           +    }
           +}
           +
       
       +    doit($acton) or $rc = 1;
           +}
           +
           +info(
       
           +) if $request_reload;
           +
           +exit($rc);
           +
           +##############################################################################
           +
           +sub myglob {
           +    my $arg = shift;
           +
           +    my @glob = map {
           +        s{^$choicedir/}{};
           +        s{$sffx$}{};
           +        $_
           +    } glob("$choicedir/$arg$sffx");
           +
           +    return @glob;
           +}
           +
           +sub doit {
           +    my $acton = shift;
           +
           +    my ( $conftgt, $conflink );
           +    if ( $obj eq 'module' ) {
           +        if ( $acton eq 'cgi' && threaded() ) {
           +            print
           +                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";
           +            $acton = 'cgid';
           +        }
           +
           +        $conftgt = "$availdir/$acton.conf";
           +        if ( -e $conftgt ) {
           +            $conflink = "$enabldir/$acton.conf";
           +        }
           +    }
           +
           +    my $tgt  = "$availdir/$acton$sffx";
           +    my $link = "$enabldir/$acton$sffx";
           +
           +    if ( !-e $tgt ) {
           +        if ( -l $link && !-e $link ) {
           +            if ( $act eq 'disable' ) {
           +                info("removing dangling symlink $link\n");
           +                unlink($link);
           +
           +                # force a .conf path. It may exist as dangling link, too
           +                $conflink = "$enabldir/$acton.conf";
           +
           +                if ( -l $conflink && !-e $conflink ) {
           +                    info("removing dangling symlink $conflink\n");
           +                    unlink($conflink);
           +                }
           +
           +                return 1;
           +            }
           +            else {
           +                error("$link is a dangling symlink!\n");
           +            }
           +        }
       +
           +        if ( $purge ) {
           +            switch_marker( $obj, $act, $acton );
           +            # exit silently, we are purging anyway
           +            return 1;
       
           +
           +        error("$name $acton does not exist!\n");
           +        return 0;
           +    }
           +
           +    # handle module dependencies
       +    if ( $obj eq 'module' ) {
           +        if ( $act eq 'enable' ) {
           +            if ( $acton eq 'mpm_itk' ) {
           +                warning(  "MPM_ITK is a third party module that is not part "
           +                        . "of the official Apache HTTPD. It has seen less "
           +                        . "testing than the official MPM modules." );
           +            }
           +            my @depends = get_deps("$availdir/$acton.load");
           +            do_deps( $acton, @depends ) or return 0;
           +
           +            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );
           +            check_conflicts( $acton, @conflicts ) or return 0;
       +        }
           +        else {
           +            my @depending;
           +            foreach my $d ( glob("$enabldir/*.load") ) {
           +                my @deps = get_deps($d);
       +                if ( is_in( $acton, @deps ) ) {
           +                    $d =~ m,/([^/]+).load$,;
           +                    push @depending, $1;
           +                }
           +            }
           +            if ( scalar @depending ) {
       
           +                    do_deps( $acton, @depending ) or return 0;
           +                }
           +                else {
           +                    error(
       +                        "The following modules depend on $acton ",
       
           +                    );
           +                    return 0;
           +                }
           +            }
           +        }
           +    }
           +    elsif ( $act eq 'enable' ) {
           +        my @depends = get_deps("$availdir/$acton$sffx");
           +        warn_deps( $acton, @depends ) or return 0;
           +    }
           +
           +    if ( $act eq 'enable' ) {
           +        my $check = check_link( $tgt, $link );
           +        if ( $check eq 'ok' ) {
           +            if ($conflink) {
           +
       +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'ok' ) {
           +                    info("$name $acton already enabled\n");
           +                    return 1;
           +                }
           +                elsif ( $confcheck eq 'missing' ) {
           +                    print "Enabling config file $acton.conf.\n";
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                else {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +            else {
           +                info("$name $acton already enabled\n");
           +                return 1;
           +            }
           +        }
           +        elsif ( $check eq 'missing' ) {
           +            if ($conflink) {
           +
       
       
           +                if ( $confcheck eq 'missing' ) {
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                elsif ( $confcheck ne 'ok' ) {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +
           +            print "Enabling $obj $acton.\n";
           +            if ( $acton eq 'ssl' ) {
           +                info(     "See /usr/share/doc/apache2/README.Debian.gz on "
           +                        . "how to configure SSL and create self-signed certificates.\n"
           +                );
           +            }
           +            return add_link( $tgt, $link )
       +                && switch_marker( $obj, $act, $acton );
           +        }
           +        else {
           +            error("$name $acton not properly enabled: $check\n");
           +            return 0;
       
           +    }
           +    else {
           +        if ( -e $link || -l $link ) {
           +            remove_link($link);
           +            if ( $conflink && -e $conflink ) {
           +                remove_link($conflink);
           +            }
           +            switch_marker( $obj, $act, $acton );
           +            print "$name $acton disabled.\n";
           +        }
       +        elsif ( $conflink && -e $conflink ) {
           +            print "Disabling stale config file $acton.conf.\n";
           +            remove_link($conflink);
           +        }
           +        else {
       
           +            if ( $purge ) {
           +                switch_marker( $obj, $act, $acton );
           +            }
       +            return 1;
           +        }
           +    }
           +
           +    return 1;
       
       
       
           +    my $file = shift;
           +    my $type = shift || "Depends";
           +
       +    my $fd;
           +    if ( !open( $fd, '<', $file ) ) {
           +        error("Can't open $file: $!");
           +        return;
           +    }
       
           +    while ( defined( $line = <$fd> ) ) {
           +        chomp $line;
           +        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {
           +            my $deps = $1;
       +            return split( /[\n\s]+/, $deps );
           +        }
           +
           +        # only check until the first non-empty non-comment line
           +        last if ( $line !~ /^\s*(?:#.*)?$/ );
       +    }
           +    return;
           +}
           +
           +sub do_deps {
           +    my $acton = shift;
           +    foreach my $d (@_) {
       +        info("Considering dependency $d for $acton:\n");
           +        if ( !doit($d) ) {
           +            error("Could not $act dependency $d for $acton, aborting\n");
           +            return 0;
           +        }
           +    }
           +    return 1;
           +}
           +
           +sub warn_deps {
           +    my $acton = shift;
           +    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";
           +    foreach my $d (@_) {
           +        info("Checking dependency $d for $acton:\n");
           +        if ( !-e "$modsenabldir/$d.load" ) {
           +            warning(
       
           +            );
           +            return 0;
           +        }
           +    }
           +    return 1;
       +}
       +
           +sub check_conflicts {
           +    my $acton    = shift;
           +    my $haderror = 0;
           +    foreach my $d (@_) {
           +        info("Considering conflict $d for $acton:\n");
           +
           +        my $tgt  = "$availdir/$d$sffx";
           +        my $link = "$enabldir/$d$sffx";
           +
       
           +        if ( $confcheck eq 'ok' ) {
           +            error(
           +                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"
           +            );
           +
           +            # Don't return immediately, there could be several conflicts
           +            $haderror++;
           +        }
           +    }
           +
           +    if ($haderror) {
       
           +    }
           +
           +    return 1;
           +}
           +
           +sub add_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    # create relative link
           +    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {
       
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub check_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    if ( !-e $link ) {
           +        if ( -l $link ) {
           +
           +            # points to nowhere
       +            info("Removing dangling link $link");
           +            unlink($link) or die "Could not remove $link\n";
           +        }
           +        return 'missing';
           +    }
           +
           +    if ( -e $link && !-l $link ) {
           +        return "$link is a real file, not touching it";
           +    }
           +    if ( realpath($link) ne realpath($tgt) ) {
           +        return "$link exists but does not point to $tgt, not touching it";
           +    }
       
           +}
           +
           +sub remove_link {
           +    my ($link) = @_;
           +
           +    if ( -l $link ) {
           +        unlink($link) or die "Could not remove $link: $!\n";
           +    }
           +    elsif ( -e $link ) {
           +        error("$link is not a symbolic link, not deleting\n");
           +        return 0;
           +    }
       
           +    return 1;
           +}
           +
           +sub threaded {
       
           +    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}
           +        if -x '/usr/sbin/apache2ctl';
           +    if ( $? != 0 ) {
           +
           +        # config doesn't work
           +        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )
           +        {
           +            return 0;
           +        }
           +        elsif (-e "$enabldir/mpm_worker.load"
           +            || -e "$enabldir/mpm_event.load" )
           +        {
           +            return 1;
           +        }
           +        else {
           +            error("Can't determine enabled MPM");
           +
           +            # do what user requested
           +            return 0;
       
           +    }
           +    if ( $result =~ / no/ ) {
           +        return 0;
           +    }
           +    elsif ( $result =~ / yes/ ) {
           +        return 1;
           +    }
           +    else {
           +        die("Can't parse output from apache2ctl -V:\n$result\n");
       +    }
           +}
           +
           +sub info {
           +    print @_ if !$quiet;
           +}
           +
           +sub error {
           +    print STDERR 'ERROR: ', @_;
           +}
           +
       
           +    print STDERR 'WARNING: ', @_;
           +}
           +
           +sub is_in {
           +    my $needle = shift;
       
           +        return 1 if $needle eq $e;
           +    }
       +    return 0;
           +}
           +
           +sub read_env_file {
           +    my $file = shift;
           +
           +    -r $file or return;
           +    my @lines = qx{env - sh -c '. $file && env'};
           +    if ($?) {
           +        die "Could not read $file\n";
           +    }
           +
           +    foreach my $l (@lines) {
           +        chomp $l;
           +        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";
           +        $ENV{$1} = $2;
           +    }
           +}
           +
           +sub switch_marker {
           +    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')
           +        if @_ != 3;
           +    my $which = shift;
           +    my $what  = shift;
           +    my $name  = shift;
           +
           +    my $mode = "admin";
       +    $mode = "maint" if $maintmode;
       
           +    #print("switch_marker $which $what $name\n");
           +    # TODO: get rid of the magic string(s)
           +    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";
           +    my $state_marker     = "$state_marker_dir/$name";
           +    if ( !-d $state_marker_dir ) {
           +        File::Path::mkpath("$state_marker_dir")
           +            || error(
           +            "Failed to create marker directory: '$state_marker_dir'\n");
           +    }
           +
           +    # XXX: swap find with perl alternative
           +    my @markers = qx{find "$statedir" -type f -a -name "$name"};
           +    chomp(@markers);
           +    foreach (@markers) {
           +        unless ( unlink $_ ) {
           +            error("Failed to remove old marker '$_'!\n") && return 0;
           +        }
       
           +    unless ($purge) {
           +        qx{touch "$state_marker"};
           +        if ( $? != 0 ) {
           +            error("Failed to create marker '$state_marker'!\n") && return 0;
           +        }
           +        return 1;
           +    }
           +}
           +
       
           - change mode from '' to '0700'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * link[/usr/sbin/a2dissite] action delete
           - delete link at /usr/sbin/a2dissite
         * template[/usr/sbin/a2dissite] action create
           - create new file /usr/sbin/a2dissite
           - update content in file /usr/sbin/a2dissite from none to ce53f4
           --- /usr/sbin/a2dissite	2016-02-13 23:37:46.493457093 +0000
           +++ /usr/sbin/.a2dissite20160213-1410-8tbh82	2016-02-13 23:37:46.493457093 +0000
           @@ -1 +1,533 @@
           +#!/usr/bin/perl -w
           +#
           +# a2enmod by Stefan Fritsch <sf@debian.org>
           +# Licensed under Apache License 2.0
           +#
           +# The coding style is "perltidy -pbp"
           +
           +use strict;
           +use Cwd 'realpath';
           +use File::Spec;
           +use File::Basename;
           +use File::Path;
           +use Getopt::Long;
           +
           +my $quiet;
           +my $force;
           +my $maintmode;
           +my $purge;
           +
           +Getopt::Long::Configure('bundling');
           +GetOptions(
           +    'quiet|q'     => \$quiet,
           +    'force|f'     => \$force,
           +    'maintmode|m' => \$maintmode,
           +    'purge|p'     => \$purge
           +) or exit 2;
           +
           +my $basename = basename($0);
       
           +    or die "$basename call name unknown\n";
           +my $act        = $1;
           +my $obj        = $2;
           +my $dir_suffix = $3;
           +
           +my $env_file = $ENV{APACHE_ENVVARS}
           +    || (
           +    $ENV{APACHE_CONFDIR}
           +    ? "$ENV{APACHE_CONFDIR}/envvars"
           +    : "/etc/apache2$dir_suffix/envvars"
           +    );
           +$ENV{LANG} = 'C';
           +read_env_file($env_file);
           +
           +$act .= 'able';
           +my ( $name, $dir, $sffx, $reload );
           +if ( $obj eq 'mod' ) {
           +    $obj    = 'module';
       
           +    $sffx   = '.load';
           +    $reload = 'restart';
           +}
           +elsif ( $obj eq 'conf' ) {
           +    $obj    = 'conf';
       +    $dir    = 'conf';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +else {
           +    $dir    = 'sites';
       +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +$name = ucfirst($obj);
           +
           +my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";
           +my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }
           +    || "$confdir/$dir-available";
           +my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";
           +my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";
           +
           +$statedir .= "/$obj";
           +
           +my $choicedir = $act eq 'enable' ? $availdir : $enabldir;
           +my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );
           +
           +my $request_reload = 0;
           +
           +my $rc = 0;
           +
           +if ( !scalar @ARGV ) {
           +    my @choices = myglob('*');
           +    print "Your choices are: @choices\n";
           +    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";
           +    my $input = <>;
       
           +
           +}
           +
           +my @objs;
           +foreach my $arg (@ARGV) {
           +    $arg =~ s/${sffx}$//;
           +    my @glob = myglob($arg);
           +    if ( !@glob ) {
           +        error("No $obj found matching $arg!\n");
           +        $rc = 1;
       
           +    else {
           +        push @objs, @glob;
           +    }
           +}
           +
           +foreach my $acton (@objs) {
           +    doit($acton) or $rc = 1;
           +}
           +
           +info(
           +    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"
       +) if $request_reload;
       
           +exit($rc);
           +
       
       +
           +sub myglob {
           +    my $arg = shift;
           +
           +    my @glob = map {
           +        s{^$choicedir/}{};
           +        s{$sffx$}{};
           +        $_
           +    } glob("$choicedir/$arg$sffx");
           +
           +    return @glob;
           +}
           +
           +sub doit {
           +    my $acton = shift;
           +
           +    my ( $conftgt, $conflink );
           +    if ( $obj eq 'module' ) {
           +        if ( $acton eq 'cgi' && threaded() ) {
           +            print
           +                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";
           +            $acton = 'cgid';
           +        }
           +
           +        $conftgt = "$availdir/$acton.conf";
           +        if ( -e $conftgt ) {
           +            $conflink = "$enabldir/$acton.conf";
           +        }
           +    }
           +
           +    my $tgt  = "$availdir/$acton$sffx";
           +    my $link = "$enabldir/$acton$sffx";
       +
           +    if ( !-e $tgt ) {
           +        if ( -l $link && !-e $link ) {
           +            if ( $act eq 'disable' ) {
           +                info("removing dangling symlink $link\n");
           +                unlink($link);
           +
       +                # force a .conf path. It may exist as dangling link, too
           +                $conflink = "$enabldir/$acton.conf";
           +
           +                if ( -l $conflink && !-e $conflink ) {
       +                    info("removing dangling symlink $conflink\n");
           +                    unlink($conflink);
           +                }
           +
           +                return 1;
           +            }
           +            else {
           +                error("$link is a dangling symlink!\n");
           +            }
           +        }
           +
           +        if ( $purge ) {
           +            switch_marker( $obj, $act, $acton );
           +            # exit silently, we are purging anyway
           +            return 1;
           +        }
       +
           +        error("$name $acton does not exist!\n");
           +        return 0;
           +    }
           +
           +    # handle module dependencies
       
           +        if ( $act eq 'enable' ) {
           +            if ( $acton eq 'mpm_itk' ) {
           +                warning(  "MPM_ITK is a third party module that is not part "
           +                        . "of the official Apache HTTPD. It has seen less "
           +                        . "testing than the official MPM modules." );
           +            }
           +            my @depends = get_deps("$availdir/$acton.load");
           +            do_deps( $acton, @depends ) or return 0;
           +
           +            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );
           +            check_conflicts( $acton, @conflicts ) or return 0;
           +        }
           +        else {
           +            my @depending;
           +            foreach my $d ( glob("$enabldir/*.load") ) {
           +                my @deps = get_deps($d);
           +                if ( is_in( $acton, @deps ) ) {
           +                    $d =~ m,/([^/]+).load$,;
       +                    push @depending, $1;
           +                }
           +            }
           +            if ( scalar @depending ) {
           +                if ($force) {
           +                    do_deps( $acton, @depending ) or return 0;
       +                }
           +                else {
           +                    error(
           +                        "The following modules depend on $acton ",
           +                        "and need to be disabled first: @depending\n"
           +                    );
           +                    return 0;
       
           +            }
           +        }
           +    }
           +    elsif ( $act eq 'enable' ) {
           +        my @depends = get_deps("$availdir/$acton$sffx");
           +        warn_deps( $acton, @depends ) or return 0;
           +    }
       +
           +    if ( $act eq 'enable' ) {
           +        my $check = check_link( $tgt, $link );
           +        if ( $check eq 'ok' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
       +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'ok' ) {
           +                    info("$name $acton already enabled\n");
           +                    return 1;
           +                }
       +                elsif ( $confcheck eq 'missing' ) {
           +                    print "Enabling config file $acton.conf.\n";
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                else {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +            else {
           +                info("$name $acton already enabled\n");
           +                return 1;
           +            }
       
           +        elsif ( $check eq 'missing' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'missing' ) {
       
           +                }
           +                elsif ( $confcheck ne 'ok' ) {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
       
           +                }
           +            }
           +
           +            print "Enabling $obj $acton.\n";
           +            if ( $acton eq 'ssl' ) {
       +                info(     "See /usr/share/doc/apache2/README.Debian.gz on "
           +                        . "how to configure SSL and create self-signed certificates.\n"
           +                );
           +            }
           +            return add_link( $tgt, $link )
           +                && switch_marker( $obj, $act, $acton );
           +        }
           +        else {
           +            error("$name $acton not properly enabled: $check\n");
           +            return 0;
           +        }
           +    }
           +    else {
           +        if ( -e $link || -l $link ) {
           +            remove_link($link);
           +            if ( $conflink && -e $conflink ) {
           +                remove_link($conflink);
           +            }
           +            switch_marker( $obj, $act, $acton );
           +            print "$name $acton disabled.\n";
           +        }
           +        elsif ( $conflink && -e $conflink ) {
           +            print "Disabling stale config file $acton.conf.\n";
           +            remove_link($conflink);
           +        }
           +        else {
           +            info("$name $acton already disabled\n");
           +            if ( $purge ) {
           +                switch_marker( $obj, $act, $acton );
           +            }
       +            return 1;
           +        }
       
           +
           +    return 1;
           +}
           +
           +sub get_deps {
           +    my $file = shift;
           +    my $type = shift || "Depends";
           +
           +    my $fd;
           +    if ( !open( $fd, '<', $file ) ) {
           +        error("Can't open $file: $!");
       
           +    }
           +    my $line;
           +    while ( defined( $line = <$fd> ) ) {
           +        chomp $line;
           +        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {
           +            my $deps = $1;
           +            return split( /[\n\s]+/, $deps );
           +        }
           +
           +        # only check until the first non-empty non-comment line
           +        last if ( $line !~ /^\s*(?:#.*)?$/ );
           +    }
       +    return;
           +}
           +
           +sub do_deps {
       
           +    foreach my $d (@_) {
           +        info("Considering dependency $d for $acton:\n");
           +        if ( !doit($d) ) {
           +            error("Could not $act dependency $d for $acton, aborting\n");
       +            return 0;
           +        }
           +    }
           +    return 1;
           +}
           +
       +sub warn_deps {
           +    my $acton = shift;
           +    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";
           +    foreach my $d (@_) {
       
       +        if ( !-e "$modsenabldir/$d.load" ) {
           +            warning(
           +                "Module $d is not enabled, but $acton depends on it, aborting\n"
           +            );
           +            return 0;
           +        }
       +    }
           +    return 1;
           +}
           +
           +sub check_conflicts {
           +    my $acton    = shift;
           +    my $haderror = 0;
           +    foreach my $d (@_) {
           +        info("Considering conflict $d for $acton:\n");
           +
           +        my $tgt  = "$availdir/$d$sffx";
           +        my $link = "$enabldir/$d$sffx";
           +
           +        my $confcheck = check_link( $tgt, $link );
           +        if ( $confcheck eq 'ok' ) {
           +            error(
           +                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"
           +            );
           +
           +            # Don't return immediately, there could be several conflicts
           +            $haderror++;
           +        }
           +    }
           +
           +    if ($haderror) {
           +        return 0;
           +    }
           +
           +    return 1;
           +}
           +
           +sub add_link {
           +    my ( $tgt, $link ) = @_;
           +
       
           +    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {
           +        die("Could not create $link: $!\n");
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub check_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    if ( !-e $link ) {
           +        if ( -l $link ) {
           +
           +            # points to nowhere
           +            info("Removing dangling link $link");
           +            unlink($link) or die "Could not remove $link\n";
           +        }
           +        return 'missing';
           +    }
           +
           +    if ( -e $link && !-l $link ) {
           +        return "$link is a real file, not touching it";
           +    }
           +    if ( realpath($link) ne realpath($tgt) ) {
           +        return "$link exists but does not point to $tgt, not touching it";
       
       +    return 'ok';
           +}
           +
           +sub remove_link {
           +    my ($link) = @_;
           +
           +    if ( -l $link ) {
       +        unlink($link) or die "Could not remove $link: $!\n";
           +    }
           +    elsif ( -e $link ) {
           +        error("$link is not a symbolic link, not deleting\n");
           +        return 0;
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub threaded {
           +    my $result = "";
           +    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}
           +        if -x '/usr/sbin/apache2ctl';
           +    if ( $? != 0 ) {
           +
           +        # config doesn't work
           +        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )
           +        {
       
           +        }
           +        elsif (-e "$enabldir/mpm_worker.load"
           +            || -e "$enabldir/mpm_event.load" )
           +        {
           +            return 1;
       +        }
           +        else {
           +            error("Can't determine enabled MPM");
           +
           +            # do what user requested
           +            return 0;
           +        }
           +    }
           +    if ( $result =~ / no/ ) {
           +        return 0;
           +    }
           +    elsif ( $result =~ / yes/ ) {
           +        return 1;
           +    }
           +    else {
       +        die("Can't parse output from apache2ctl -V:\n$result\n");
           +    }
           +}
           +
           +sub info {
           +    print @_ if !$quiet;
           +}
       +
           +sub error {
           +    print STDERR 'ERROR: ', @_;
           +}
           +
           +sub warning {
           +    print STDERR 'WARNING: ', @_;
           +}
           +
           +sub is_in {
           +    my $needle = shift;
           +    foreach my $e (@_) {
           +        return 1 if $needle eq $e;
           +    }
           +    return 0;
           +}
           +
           +sub read_env_file {
           +    my $file = shift;
       
       
           +    my @lines = qx{env - sh -c '. $file && env'};
       +    if ($?) {
           +        die "Could not read $file\n";
           +    }
           +
           +    foreach my $l (@lines) {
           +        chomp $l;
           +        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";
           +        $ENV{$1} = $2;
           +    }
           +}
           +
           +sub switch_marker {
           +    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')
           +        if @_ != 3;
           +    my $which = shift;
           +    my $what  = shift;
           +    my $name  = shift;
           +
           +    my $mode = "admin";
           +    $mode = "maint" if $maintmode;
           +
           +    #print("switch_marker $which $what $name\n");
           +    # TODO: get rid of the magic string(s)
           +    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";
           +    my $state_marker     = "$state_marker_dir/$name";
           +    if ( !-d $state_marker_dir ) {
           +        File::Path::mkpath("$state_marker_dir")
           +            || error(
           +            "Failed to create marker directory: '$state_marker_dir'\n");
           +    }
           +
       +    # XXX: swap find with perl alternative
           +    my @markers = qx{find "$statedir" -type f -a -name "$name"};
           +    chomp(@markers);
           +    foreach (@markers) {
           +        unless ( unlink $_ ) {
           +            error("Failed to remove old marker '$_'!\n") && return 0;
           +        }
           +    }
       
           +        qx{touch "$state_marker"};
           +        if ( $? != 0 ) {
           +            error("Failed to create marker '$state_marker'!\n") && return 0;
           +        }
           +        return 1;
           +    }
       +}
           +
       
           - change mode from '' to '0700'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * link[/usr/sbin/a2enmod] action delete (skipped due to only_if)
         * template[/usr/sbin/a2enmod] action create
           - update content in file /usr/sbin/a2enmod from 84536d to ce53f4
           --- /usr/sbin/a2enmod	2014-01-07 13:23:42.000000000 +0000
           +++ /usr/sbin/.a2enmod20160213-1410-1bv5qc8	2016-02-13 23:37:46.533457095 +0000
           @@ -66,7 +66,7 @@
            my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }
         || "$confdir/$dir-available";
            my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";
           -my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/var/lib/apache2";
           +my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";
            
            $statedir .= "/$obj";
            
           - change mode from '0755' to '0700'
         * link[/usr/sbin/a2dismod] action delete
           - delete link at /usr/sbin/a2dismod
         * template[/usr/sbin/a2dismod] action create
           - create new file /usr/sbin/a2dismod
           - update content in file /usr/sbin/a2dismod from none to ce53f4
           --- /usr/sbin/a2dismod	2016-02-13 23:37:46.549457095 +0000
           +++ /usr/sbin/.a2dismod20160213-1410-1i3fckv	2016-02-13 23:37:46.549457095 +0000
           @@ -1 +1,533 @@
           +#!/usr/bin/perl -w
           +#
           +# a2enmod by Stefan Fritsch <sf@debian.org>
           +# Licensed under Apache License 2.0
           +#
           +# The coding style is "perltidy -pbp"
           +
           +use strict;
           +use Cwd 'realpath';
           +use File::Spec;
           +use File::Basename;
           +use File::Path;
           +use Getopt::Long;
       +
           +my $quiet;
           +my $force;
           +my $maintmode;
           +my $purge;
           +
           +Getopt::Long::Configure('bundling');
           +GetOptions(
           +    'quiet|q'     => \$quiet,
           +    'force|f'     => \$force,
           +    'maintmode|m' => \$maintmode,
           +    'purge|p'     => \$purge
           +) or exit 2;
           +
           +my $basename = basename($0);
           +$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/
           +    or die "$basename call name unknown\n";
           +my $act        = $1;
           +my $obj        = $2;
           +my $dir_suffix = $3;
       +
           +my $env_file = $ENV{APACHE_ENVVARS}
           +    || (
           +    $ENV{APACHE_CONFDIR}
           +    ? "$ENV{APACHE_CONFDIR}/envvars"
       +    : "/etc/apache2$dir_suffix/envvars"
           +    );
           +$ENV{LANG} = 'C';
           +read_env_file($env_file);
           +
           +$act .= 'able';
           +my ( $name, $dir, $sffx, $reload );
           +if ( $obj eq 'mod' ) {
       
           +    $dir    = 'mods';
           +    $sffx   = '.load';
           +    $reload = 'restart';
           +}
           +elsif ( $obj eq 'conf' ) {
           +    $obj    = 'conf';
           +    $dir    = 'conf';
       +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +else {
           +    $dir    = 'sites';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
       +$name = ucfirst($obj);
           +
           +my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";
           +my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }
           +    || "$confdir/$dir-available";
           +my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";
           +my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";
           +
           +$statedir .= "/$obj";
           +
           +my $choicedir = $act eq 'enable' ? $availdir : $enabldir;
           +my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );
           +
           +my $request_reload = 0;
           +
           +my $rc = 0;
           +
       
           +    my @choices = myglob('*');
           +    print "Your choices are: @choices\n";
           +    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";
           +    my $input = <>;
           +    @ARGV = split /\s+/, $input;
           +
           +}
           +
           +my @objs;
           +foreach my $arg (@ARGV) {
           +    $arg =~ s/${sffx}$//;
           +    my @glob = myglob($arg);
           +    if ( !@glob ) {
           +        error("No $obj found matching $arg!\n");
           +        $rc = 1;
           +    }
           +    else {
           +        push @objs, @glob;
           +    }
           +}
           +
           +foreach my $acton (@objs) {
           +    doit($acton) or $rc = 1;
       +}
           +
           +info(
           +    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"
           +) if $request_reload;
           +
           +exit($rc);
           +
           +##############################################################################
           +
           +sub myglob {
           +    my $arg = shift;
           +
           +    my @glob = map {
           +        s{^$choicedir/}{};
           +        s{$sffx$}{};
           +        $_
           +    } glob("$choicedir/$arg$sffx");
           +
           +    return @glob;
           +}
           +
       +sub doit {
           +    my $acton = shift;
           +
           +    my ( $conftgt, $conflink );
           +    if ( $obj eq 'module' ) {
           +        if ( $acton eq 'cgi' && threaded() ) {
       
           +                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";
           +            $acton = 'cgid';
           +        }
           +
           +        $conftgt = "$availdir/$acton.conf";
       
           +            $conflink = "$enabldir/$acton.conf";
           +        }
           +    }
           +
           +    my $tgt  = "$availdir/$acton$sffx";
           +    my $link = "$enabldir/$acton$sffx";
           +
           +    if ( !-e $tgt ) {
           +        if ( -l $link && !-e $link ) {
           +            if ( $act eq 'disable' ) {
           +                info("removing dangling symlink $link\n");
           +                unlink($link);
           +
           +                # force a .conf path. It may exist as dangling link, too
           +                $conflink = "$enabldir/$acton.conf";
           +
           +                if ( -l $conflink && !-e $conflink ) {
       
           +                    unlink($conflink);
           +                }
           +
           +                return 1;
           +            }
           +            else {
           +                error("$link is a dangling symlink!\n");
           +            }
           +        }
           +
           +        if ( $purge ) {
           +            switch_marker( $obj, $act, $acton );
           +            # exit silently, we are purging anyway
           +            return 1;
           +        }
           +
           +        error("$name $acton does not exist!\n");
           +        return 0;
           +    }
           +
           +    # handle module dependencies
       
           +        if ( $act eq 'enable' ) {
           +            if ( $acton eq 'mpm_itk' ) {
           +                warning(  "MPM_ITK is a third party module that is not part "
           +                        . "of the official Apache HTTPD. It has seen less "
           +                        . "testing than the official MPM modules." );
       +            }
       
           +            do_deps( $acton, @depends ) or return 0;
       
           +            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );
           +            check_conflicts( $acton, @conflicts ) or return 0;
           +        }
           +        else {
       +            my @depending;
           +            foreach my $d ( glob("$enabldir/*.load") ) {
           +                my @deps = get_deps($d);
           +                if ( is_in( $acton, @deps ) ) {
           +                    $d =~ m,/([^/]+).load$,;
           +                    push @depending, $1;
           +                }
           +            }
           +            if ( scalar @depending ) {
           +                if ($force) {
       
           +                }
           +                else {
           +                    error(
           +                        "The following modules depend on $acton ",
           +                        "and need to be disabled first: @depending\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +        }
           +    }
           +    elsif ( $act eq 'enable' ) {
           +        my @depends = get_deps("$availdir/$acton$sffx");
           +        warn_deps( $acton, @depends ) or return 0;
       +    }
           +
           +    if ( $act eq 'enable' ) {
           +        my $check = check_link( $tgt, $link );
           +        if ( $check eq 'ok' ) {
           +            if ($conflink) {
           +
       +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'ok' ) {
           +                    info("$name $acton already enabled\n");
           +                    return 1;
       
           +                elsif ( $confcheck eq 'missing' ) {
           +                    print "Enabling config file $acton.conf.\n";
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                else {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +            else {
           +                info("$name $acton already enabled\n");
           +                return 1;
           +            }
           +        }
       +        elsif ( $check eq 'missing' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'missing' ) {
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
       
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +
           +            print "Enabling $obj $acton.\n";
           +            if ( $acton eq 'ssl' ) {
           +                info(     "See /usr/share/doc/apache2/README.Debian.gz on "
           +                        . "how to configure SSL and create self-signed certificates.\n"
           +                );
           +            }
           +            return add_link( $tgt, $link )
           +                && switch_marker( $obj, $act, $acton );
       
           +        else {
           +            error("$name $acton not properly enabled: $check\n");
           +            return 0;
           +        }
           +    }
           +    else {
       
           +            remove_link($link);
           +            if ( $conflink && -e $conflink ) {
           +                remove_link($conflink);
           +            }
           +            switch_marker( $obj, $act, $acton );
           +            print "$name $acton disabled.\n";
           +        }
           +        elsif ( $conflink && -e $conflink ) {
       +            print "Disabling stale config file $acton.conf.\n";
           +            remove_link($conflink);
           +        }
           +        else {
           +            info("$name $acton already disabled\n");
           +            if ( $purge ) {
           +                switch_marker( $obj, $act, $acton );
           +            }
           +            return 1;
           +        }
           +    }
           +
           +    return 1;
           +}
           +
           +sub get_deps {
           +    my $file = shift;
           +    my $type = shift || "Depends";
           +
           +    my $fd;
           +    if ( !open( $fd, '<', $file ) ) {
           +        error("Can't open $file: $!");
           +        return;
           +    }
           +    my $line;
           +    while ( defined( $line = <$fd> ) ) {
           +        chomp $line;
           +        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {
           +            my $deps = $1;
           +            return split( /[\n\s]+/, $deps );
           +        }
           +
       
           +        last if ( $line !~ /^\s*(?:#.*)?$/ );
           +    }
           +    return;
           +}
       
           +sub do_deps {
           +    my $acton = shift;
           +    foreach my $d (@_) {
           +        info("Considering dependency $d for $acton:\n");
           +        if ( !doit($d) ) {
       +            error("Could not $act dependency $d for $acton, aborting\n");
           +            return 0;
           +        }
           +    }
           +    return 1;
           +}
           +
           +sub warn_deps {
           +    my $acton = shift;
       +    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";
           +    foreach my $d (@_) {
           +        info("Checking dependency $d for $acton:\n");
           +        if ( !-e "$modsenabldir/$d.load" ) {
           +            warning(
           +                "Module $d is not enabled, but $acton depends on it, aborting\n"
           +            );
           +            return 0;
           +        }
           +    }
       +    return 1;
           +}
           +
           +sub check_conflicts {
           +    my $acton    = shift;
           +    my $haderror = 0;
           +    foreach my $d (@_) {
           +        info("Considering conflict $d for $acton:\n");
           +
           +        my $tgt  = "$availdir/$d$sffx";
           +        my $link = "$enabldir/$d$sffx";
           +
           +        my $confcheck = check_link( $tgt, $link );
           +        if ( $confcheck eq 'ok' ) {
           +            error(
           +                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"
       +            );
           +
           +            # Don't return immediately, there could be several conflicts
           +            $haderror++;
           +        }
       +    }
           +
           +    if ($haderror) {
           +        return 0;
           +    }
           +
           +    return 1;
           +}
           +
           +sub add_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    # create relative link
           +    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {
           +        die("Could not create $link: $!\n");
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub check_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    if ( !-e $link ) {
           +        if ( -l $link ) {
           +
           +            # points to nowhere
           +            info("Removing dangling link $link");
           +            unlink($link) or die "Could not remove $link\n";
           +        }
           +        return 'missing';
           +    }
           +
           +    if ( -e $link && !-l $link ) {
           +        return "$link is a real file, not touching it";
           +    }
           +    if ( realpath($link) ne realpath($tgt) ) {
           +        return "$link exists but does not point to $tgt, not touching it";
           +    }
           +    return 'ok';
           +}
           +
           +sub remove_link {
           +    my ($link) = @_;
       +
           +    if ( -l $link ) {
           +        unlink($link) or die "Could not remove $link: $!\n";
       
           +    elsif ( -e $link ) {
           +        error("$link is not a symbolic link, not deleting\n");
           +        return 0;
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub threaded {
           +    my $result = "";
           +    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}
       +        if -x '/usr/sbin/apache2ctl';
           +    if ( $? != 0 ) {
           +
           +        # config doesn't work
           +        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )
           +        {
           +            return 0;
           +        }
           +        elsif (-e "$enabldir/mpm_worker.load"
           +            || -e "$enabldir/mpm_event.load" )
           +        {
           +            return 1;
           +        }
           +        else {
           +            error("Can't determine enabled MPM");
           +
           +            # do what user requested
           +            return 0;
           +        }
           +    }
           +    if ( $result =~ / no/ ) {
           +        return 0;
           +    }
           +    elsif ( $result =~ / yes/ ) {
           +        return 1;
           +    }
           +    else {
           +        die("Can't parse output from apache2ctl -V:\n$result\n");
           +    }
           +}
           +
           +sub info {
           +    print @_ if !$quiet;
           +}
           +
           +sub error {
           +    print STDERR 'ERROR: ', @_;
           +}
           +
           +sub warning {
           +    print STDERR 'WARNING: ', @_;
           +}
           +
           +sub is_in {
           +    my $needle = shift;
           +    foreach my $e (@_) {
           +        return 1 if $needle eq $e;
           +    }
           +    return 0;
           +}
           +
           +sub read_env_file {
           +    my $file = shift;
           +
           +    -r $file or return;
           +    my @lines = qx{env - sh -c '. $file && env'};
       
           +        die "Could not read $file\n";
           +    }
           +
           +    foreach my $l (@lines) {
           +        chomp $l;
           +        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";
           +        $ENV{$1} = $2;
           +    }
           +}
           +
           +sub switch_marker {
           +    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')
           +        if @_ != 3;
           +    my $which = shift;
           +    my $what  = shift;
           +    my $name  = shift;
       
           +    my $mode = "admin";
           +    $mode = "maint" if $maintmode;
           +
           +    #print("switch_marker $which $what $name\n");
           +    # TODO: get rid of the magic string(s)
           +    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";
           +    my $state_marker     = "$state_marker_dir/$name";
           +    if ( !-d $state_marker_dir ) {
           +        File::Path::mkpath("$state_marker_dir")
           +            || error(
           +            "Failed to create marker directory: '$state_marker_dir'\n");
           +    }
           +
           +    # XXX: swap find with perl alternative
           +    my @markers = qx{find "$statedir" -type f -a -name "$name"};
           +    chomp(@markers);
           +    foreach (@markers) {
           +        unless ( unlink $_ ) {
           +            error("Failed to remove old marker '$_'!\n") && return 0;
           +        }
       +    }
           +    unless ($purge) {
           +        qx{touch "$state_marker"};
           +        if ( $? != 0 ) {
           +            error("Failed to create marker '$state_marker'!\n") && return 0;
           +        }
           +        return 1;
           +    }
           +}
           +
       
           - change mode from '' to '0700'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * link[/usr/sbin/a2enconf] action delete
           - delete link at /usr/sbin/a2enconf
         * template[/usr/sbin/a2enconf] action create
           - create new file /usr/sbin/a2enconf
           - update content in file /usr/sbin/a2enconf from none to ce53f4
           --- /usr/sbin/a2enconf	2016-02-13 23:37:46.589457097 +0000
           +++ /usr/sbin/.a2enconf20160213-1410-su22hw	2016-02-13 23:37:46.589457097 +0000
           @@ -1 +1,533 @@
           +#!/usr/bin/perl -w
           +#
           +# a2enmod by Stefan Fritsch <sf@debian.org>
           +# Licensed under Apache License 2.0
           +#
           +# The coding style is "perltidy -pbp"
           +
           +use strict;
           +use Cwd 'realpath';
           +use File::Spec;
           +use File::Basename;
           +use File::Path;
           +use Getopt::Long;
           +
           +my $quiet;
           +my $force;
           +my $maintmode;
           +my $purge;
           +
           +Getopt::Long::Configure('bundling');
           +GetOptions(
           +    'quiet|q'     => \$quiet,
           +    'force|f'     => \$force,
           +    'maintmode|m' => \$maintmode,
           +    'purge|p'     => \$purge
           +) or exit 2;
           +
       
           +$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/
           +    or die "$basename call name unknown\n";
           +my $act        = $1;
           +my $obj        = $2;
           +my $dir_suffix = $3;
           +
           +my $env_file = $ENV{APACHE_ENVVARS}
           +    || (
           +    $ENV{APACHE_CONFDIR}
           +    ? "$ENV{APACHE_CONFDIR}/envvars"
           +    : "/etc/apache2$dir_suffix/envvars"
           +    );
           +$ENV{LANG} = 'C';
           +read_env_file($env_file);
           +
           +$act .= 'able';
           +my ( $name, $dir, $sffx, $reload );
           +if ( $obj eq 'mod' ) {
           +    $obj    = 'module';
           +    $dir    = 'mods';
           +    $sffx   = '.load';
           +    $reload = 'restart';
           +}
       
           +    $obj    = 'conf';
           +    $dir    = 'conf';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
       +else {
           +    $dir    = 'sites';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +$name = ucfirst($obj);
       
           +my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";
           +my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }
           +    || "$confdir/$dir-available";
           +my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";
           +my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";
           +
           +$statedir .= "/$obj";
           +
           +my $choicedir = $act eq 'enable' ? $availdir : $enabldir;
       +my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );
           +
           +my $request_reload = 0;
           +
           +my $rc = 0;
           +
           +if ( !scalar @ARGV ) {
           +    my @choices = myglob('*');
           +    print "Your choices are: @choices\n";
           +    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";
           +    my $input = <>;
           +    @ARGV = split /\s+/, $input;
           +
       +}
           +
           +my @objs;
           +foreach my $arg (@ARGV) {
           +    $arg =~ s/${sffx}$//;
       
           +    if ( !@glob ) {
           +        error("No $obj found matching $arg!\n");
           +        $rc = 1;
           +    }
           +    else {
           +        push @objs, @glob;
           +    }
           +}
           +
           +foreach my $acton (@objs) {
           +    doit($acton) or $rc = 1;
       +}
           +
           +info(
           +    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"
           +) if $request_reload;
           +
           +exit($rc);
       +
           +##############################################################################
           +
           +sub myglob {
           +    my $arg = shift;
       +
           +    my @glob = map {
           +        s{^$choicedir/}{};
           +        s{$sffx$}{};
           +        $_
           +    } glob("$choicedir/$arg$sffx");
       +
           +    return @glob;
           +}
           +
           +sub doit {
           +    my $acton = shift;
           +
           +    my ( $conftgt, $conflink );
           +    if ( $obj eq 'module' ) {
           +        if ( $acton eq 'cgi' && threaded() ) {
           +            print
           +                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";
           +            $acton = 'cgid';
           +        }
           +
           +        $conftgt = "$availdir/$acton.conf";
           +        if ( -e $conftgt ) {
           +            $conflink = "$enabldir/$acton.conf";
           +        }
           +    }
           +
           +    my $tgt  = "$availdir/$acton$sffx";
           +    my $link = "$enabldir/$acton$sffx";
           +
           +    if ( !-e $tgt ) {
           +        if ( -l $link && !-e $link ) {
           +            if ( $act eq 'disable' ) {
           +                info("removing dangling symlink $link\n");
       
           +
           +                # force a .conf path. It may exist as dangling link, too
           +                $conflink = "$enabldir/$acton.conf";
           +
       
           +                    info("removing dangling symlink $conflink\n");
           +                    unlink($conflink);
           +                }
           +
           +                return 1;
           +            }
           +            else {
           +                error("$link is a dangling symlink!\n");
           +            }
           +        }
           +
           +        if ( $purge ) {
           +            switch_marker( $obj, $act, $acton );
       +            # exit silently, we are purging anyway
       
           +        }
           +
           +        error("$name $acton does not exist!\n");
           +        return 0;
           +    }
           +
           +    # handle module dependencies
           +    if ( $obj eq 'module' ) {
           +        if ( $act eq 'enable' ) {
           +            if ( $acton eq 'mpm_itk' ) {
           +                warning(  "MPM_ITK is a third party module that is not part "
       
           +                        . "testing than the official MPM modules." );
       
           +            my @depends = get_deps("$availdir/$acton.load");
           +            do_deps( $acton, @depends ) or return 0;
       +
           +            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );
           +            check_conflicts( $acton, @conflicts ) or return 0;
           +        }
       +        else {
           +            my @depending;
           +            foreach my $d ( glob("$enabldir/*.load") ) {
           +                my @deps = get_deps($d);
           +                if ( is_in( $acton, @deps ) ) {
           +                    $d =~ m,/([^/]+).load$,;
           +                    push @depending, $1;
           +                }
           +            }
           +            if ( scalar @depending ) {
           +                if ($force) {
           +                    do_deps( $acton, @depending ) or return 0;
       +                }
           +                else {
           +                    error(
           +                        "The following modules depend on $acton ",
           +                        "and need to be disabled first: @depending\n"
           +                    );
       +                    return 0;
       +                }
           +            }
           +        }
           +    }
       
           +        my @depends = get_deps("$availdir/$acton$sffx");
           +        warn_deps( $acton, @depends ) or return 0;
           +    }
           +
           +    if ( $act eq 'enable' ) {
       
           +        if ( $check eq 'ok' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'ok' ) {
           +                    info("$name $acton already enabled\n");
           +                    return 1;
       
           +                elsif ( $confcheck eq 'missing' ) {
           +                    print "Enabling config file $acton.conf.\n";
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                else {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +            else {
           +                info("$name $acton already enabled\n");
           +                return 1;
           +            }
           +        }
           +        elsif ( $check eq 'missing' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'missing' ) {
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
       +                elsif ( $confcheck ne 'ok' ) {
       +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
       +                }
           +            }
           +
           +            print "Enabling $obj $acton.\n";
           +            if ( $acton eq 'ssl' ) {
           +                info(     "See /usr/share/doc/apache2/README.Debian.gz on "
           +                        . "how to configure SSL and create self-signed certificates.\n"
           +                );
           +            }
           +            return add_link( $tgt, $link )
           +                && switch_marker( $obj, $act, $acton );
           +        }
           +        else {
           +            error("$name $acton not properly enabled: $check\n");
           +            return 0;
           +        }
           +    }
           +    else {
           +        if ( -e $link || -l $link ) {
           +            remove_link($link);
           +            if ( $conflink && -e $conflink ) {
           +                remove_link($conflink);
           +            }
       +            switch_marker( $obj, $act, $acton );
           +            print "$name $acton disabled.\n";
           +        }
           +        elsif ( $conflink && -e $conflink ) {
           +            print "Disabling stale config file $acton.conf.\n";
           +            remove_link($conflink);
       
           +        else {
           +            info("$name $acton already disabled\n");
           +            if ( $purge ) {
           +                switch_marker( $obj, $act, $acton );
           +            }
           +            return 1;
           +        }
           +    }
           +
           +    return 1;
       +}
           +
           +sub get_deps {
           +    my $file = shift;
           +    my $type = shift || "Depends";
           +
           +    my $fd;
           +    if ( !open( $fd, '<', $file ) ) {
           +        error("Can't open $file: $!");
           +        return;
           +    }
           +    my $line;
           +    while ( defined( $line = <$fd> ) ) {
       
           +        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {
           +            my $deps = $1;
           +            return split( /[\n\s]+/, $deps );
           +        }
           +
       +        # only check until the first non-empty non-comment line
           +        last if ( $line !~ /^\s*(?:#.*)?$/ );
           +    }
           +    return;
           +}
           +
           +sub do_deps {
           +    my $acton = shift;
           +    foreach my $d (@_) {
           +        info("Considering dependency $d for $acton:\n");
       +        if ( !doit($d) ) {
           +            error("Could not $act dependency $d for $acton, aborting\n");
           +            return 0;
           +        }
           +    }
           +    return 1;
           +}
           +
           +sub warn_deps {
           +    my $acton = shift;
           +    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";
           +    foreach my $d (@_) {
           +        info("Checking dependency $d for $acton:\n");
           +        if ( !-e "$modsenabldir/$d.load" ) {
           +            warning(
           +                "Module $d is not enabled, but $acton depends on it, aborting\n"
           +            );
           +            return 0;
           +        }
           +    }
           +    return 1;
           +}
           +
           +sub check_conflicts {
           +    my $acton    = shift;
       +    my $haderror = 0;
           +    foreach my $d (@_) {
           +        info("Considering conflict $d for $acton:\n");
           +
           +        my $tgt  = "$availdir/$d$sffx";
           +        my $link = "$enabldir/$d$sffx";
           +
           +        my $confcheck = check_link( $tgt, $link );
           +        if ( $confcheck eq 'ok' ) {
           +            error(
           +                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"
           +            );
           +
           +            # Don't return immediately, there could be several conflicts
           +            $haderror++;
           +        }
           +    }
           +
           +    if ($haderror) {
           +        return 0;
           +    }
           +
           +    return 1;
           +}
           +
           +sub add_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    # create relative link
           +    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {
           +        die("Could not create $link: $!\n");
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub check_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    if ( !-e $link ) {
           +        if ( -l $link ) {
           +
           +            # points to nowhere
           +            info("Removing dangling link $link");
           +            unlink($link) or die "Could not remove $link\n";
           +        }
           +        return 'missing';
           +    }
           +
           +    if ( -e $link && !-l $link ) {
           +        return "$link is a real file, not touching it";
           +    }
           +    if ( realpath($link) ne realpath($tgt) ) {
           +        return "$link exists but does not point to $tgt, not touching it";
           +    }
           +    return 'ok';
           +}
           +
           +sub remove_link {
           +    my ($link) = @_;
           +
           +    if ( -l $link ) {
           +        unlink($link) or die "Could not remove $link: $!\n";
           +    }
           +    elsif ( -e $link ) {
           +        error("$link is not a symbolic link, not deleting\n");
           +        return 0;
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub threaded {
           +    my $result = "";
       +    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}
           +        if -x '/usr/sbin/apache2ctl';
           +    if ( $? != 0 ) {
           +
       +        # config doesn't work
           +        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )
           +        {
           +            return 0;
           +        }
           +        elsif (-e "$enabldir/mpm_worker.load"
       +            || -e "$enabldir/mpm_event.load" )
           +        {
           +            return 1;
           +        }
           +        else {
           +            error("Can't determine enabled MPM");
           +
           +            # do what user requested
           +            return 0;
       
           +    }
           +    if ( $result =~ / no/ ) {
           +        return 0;
           +    }
           +    elsif ( $result =~ / yes/ ) {
           +        return 1;
           +    }
           +    else {
           +        die("Can't parse output from apache2ctl -V:\n$result\n");
       
           +}
           +
           +sub info {
       +    print @_ if !$quiet;
           +}
           +
           +sub error {
           +    print STDERR 'ERROR: ', @_;
           +}
           +
           +sub warning {
       
           +}
           +
       
           +    my $needle = shift;
           +    foreach my $e (@_) {
           +        return 1 if $needle eq $e;
           +    }
           +    return 0;
       +}
           +
           +sub read_env_file {
           +    my $file = shift;
           +
           +    -r $file or return;
           +    my @lines = qx{env - sh -c '. $file && env'};
           +    if ($?) {
           +        die "Could not read $file\n";
       
           +
           +    foreach my $l (@lines) {
           +        chomp $l;
           +        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";
           +        $ENV{$1} = $2;
           +    }
           +}
           +
           +sub switch_marker {
           +    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')
       +        if @_ != 3;
           +    my $which = shift;
           +    my $what  = shift;
           +    my $name  = shift;
           +
           +    my $mode = "admin";
       
           +
           +    #print("switch_marker $which $what $name\n");
           +    # TODO: get rid of the magic string(s)
           +    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";
           +    my $state_marker     = "$state_marker_dir/$name";
           +    if ( !-d $state_marker_dir ) {
           +        File::Path::mkpath("$state_marker_dir")
           +            || error(
           +            "Failed to create marker directory: '$state_marker_dir'\n");
           +    }
           +
           +    # XXX: swap find with perl alternative
           +    my @markers = qx{find "$statedir" -type f -a -name "$name"};
           +    chomp(@markers);
       +    foreach (@markers) {
           +        unless ( unlink $_ ) {
           +            error("Failed to remove old marker '$_'!\n") && return 0;
           +        }
           +    }
           +    unless ($purge) {
           +        qx{touch "$state_marker"};
           +        if ( $? != 0 ) {
           +            error("Failed to create marker '$state_marker'!\n") && return 0;
           +        }
       +        return 1;
           +    }
           +}
           +
       
           - change mode from '' to '0700'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * link[/usr/sbin/a2disconf] action delete
           - delete link at /usr/sbin/a2disconf
         * template[/usr/sbin/a2disconf] action create
           - create new file /usr/sbin/a2disconf
           - update content in file /usr/sbin/a2disconf from none to ce53f4
           --- /usr/sbin/a2disconf	2016-02-13 23:37:46.633457099 +0000
           +++ /usr/sbin/.a2disconf20160213-1410-1czwe7u	2016-02-13 23:37:46.633457099 +0000
           @@ -1 +1,533 @@
           +#!/usr/bin/perl -w
           +#
           +# a2enmod by Stefan Fritsch <sf@debian.org>
           +# Licensed under Apache License 2.0
           +#
           +# The coding style is "perltidy -pbp"
           +
           +use strict;
           +use Cwd 'realpath';
           +use File::Spec;
           +use File::Basename;
           +use File::Path;
           +use Getopt::Long;
       +
           +my $quiet;
           +my $force;
           +my $maintmode;
           +my $purge;
       +
           +Getopt::Long::Configure('bundling');
           +GetOptions(
           +    'quiet|q'     => \$quiet,
           +    'force|f'     => \$force,
           +    'maintmode|m' => \$maintmode,
           +    'purge|p'     => \$purge
           +) or exit 2;
           +
           +my $basename = basename($0);
           +$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/
           +    or die "$basename call name unknown\n";
           +my $act        = $1;
           +my $obj        = $2;
       
           +
           +my $env_file = $ENV{APACHE_ENVVARS}
           +    || (
           +    $ENV{APACHE_CONFDIR}
       +    ? "$ENV{APACHE_CONFDIR}/envvars"
           +    : "/etc/apache2$dir_suffix/envvars"
           +    );
           +$ENV{LANG} = 'C';
           +read_env_file($env_file);
           +
           +$act .= 'able';
           +my ( $name, $dir, $sffx, $reload );
           +if ( $obj eq 'mod' ) {
           +    $obj    = 'module';
           +    $dir    = 'mods';
           +    $sffx   = '.load';
           +    $reload = 'restart';
           +}
           +elsif ( $obj eq 'conf' ) {
           +    $obj    = 'conf';
           +    $dir    = 'conf';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +else {
       +    $dir    = 'sites';
           +    $sffx   = '.conf';
           +    $reload = 'reload';
           +}
           +$name = ucfirst($obj);
           +
       +my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";
           +my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }
           +    || "$confdir/$dir-available";
           +my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";
           +my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";
           +
           +$statedir .= "/$obj";
           +
           +my $choicedir = $act eq 'enable' ? $availdir : $enabldir;
           +my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );
       +
           +my $request_reload = 0;
           +
           +my $rc = 0;
           +
           +if ( !scalar @ARGV ) {
       +    my @choices = myglob('*');
           +    print "Your choices are: @choices\n";
           +    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";
           +    my $input = <>;
           +    @ARGV = split /\s+/, $input;
           +
       +}
           +
           +my @objs;
           +foreach my $arg (@ARGV) {
       
           +    my @glob = myglob($arg);
           +    if ( !@glob ) {
           +        error("No $obj found matching $arg!\n");
           +        $rc = 1;
           +    }
           +    else {
           +        push @objs, @glob;
           +    }
           +}
           +
           +foreach my $acton (@objs) {
           +    doit($acton) or $rc = 1;
           +}
           +
           +info(
           +    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"
           +) if $request_reload;
       +
           +exit($rc);
           +
           +##############################################################################
           +
           +sub myglob {
           +    my $arg = shift;
           +
           +    my @glob = map {
           +        s{^$choicedir/}{};
           +        s{$sffx$}{};
           +        $_
           +    } glob("$choicedir/$arg$sffx");
           +
           +    return @glob;
       +}
           +
           +sub doit {
       +    my $acton = shift;
           +
           +    my ( $conftgt, $conflink );
           +    if ( $obj eq 'module' ) {
           +        if ( $acton eq 'cgi' && threaded() ) {
           +            print
           +                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";
           +            $acton = 'cgid';
           +        }
           +
           +        $conftgt = "$availdir/$acton.conf";
           +        if ( -e $conftgt ) {
       +            $conflink = "$enabldir/$acton.conf";
           +        }
           +    }
           +
           +    my $tgt  = "$availdir/$acton$sffx";
           +    my $link = "$enabldir/$acton$sffx";
       +
           +    if ( !-e $tgt ) {
           +        if ( -l $link && !-e $link ) {
           +            if ( $act eq 'disable' ) {
           +                info("removing dangling symlink $link\n");
       +                unlink($link);
           +
           +                # force a .conf path. It may exist as dangling link, too
           +                $conflink = "$enabldir/$acton.conf";
           +
           +                if ( -l $conflink && !-e $conflink ) {
           +                    info("removing dangling symlink $conflink\n");
           +                    unlink($conflink);
           +                }
       +
           +                return 1;
           +            }
           +            else {
           +                error("$link is a dangling symlink!\n");
           +            }
           +        }
           +
           +        if ( $purge ) {
           +            switch_marker( $obj, $act, $acton );
           +            # exit silently, we are purging anyway
       
           +        }
           +
           +        error("$name $acton does not exist!\n");
           +        return 0;
           +    }
           +
           +    # handle module dependencies
           +    if ( $obj eq 'module' ) {
           +        if ( $act eq 'enable' ) {
           +            if ( $acton eq 'mpm_itk' ) {
           +                warning(  "MPM_ITK is a third party module that is not part "
           +                        . "of the official Apache HTTPD. It has seen less "
           +                        . "testing than the official MPM modules." );
           +            }
           +            my @depends = get_deps("$availdir/$acton.load");
           +            do_deps( $acton, @depends ) or return 0;
           +
           +            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );
           +            check_conflicts( $acton, @conflicts ) or return 0;
           +        }
       
           +            my @depending;
           +            foreach my $d ( glob("$enabldir/*.load") ) {
           +                my @deps = get_deps($d);
           +                if ( is_in( $acton, @deps ) ) {
           +                    $d =~ m,/([^/]+).load$,;
           +                    push @depending, $1;
           +                }
           +            }
           +            if ( scalar @depending ) {
           +                if ($force) {
           +                    do_deps( $acton, @depending ) or return 0;
       
           +                else {
           +                    error(
           +                        "The following modules depend on $acton ",
           +                        "and need to be disabled first: @depending\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +        }
           +    }
           +    elsif ( $act eq 'enable' ) {
           +        my @depends = get_deps("$availdir/$acton$sffx");
           +        warn_deps( $acton, @depends ) or return 0;
       
       
           +    if ( $act eq 'enable' ) {
           +        my $check = check_link( $tgt, $link );
           +        if ( $check eq 'ok' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
       
           +                if ( $confcheck eq 'ok' ) {
           +                    info("$name $acton already enabled\n");
           +                    return 1;
           +                }
           +                elsif ( $confcheck eq 'missing' ) {
           +                    print "Enabling config file $acton.conf.\n";
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                else {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +            else {
       
           +                return 1;
           +            }
           +        }
           +        elsif ( $check eq 'missing' ) {
           +            if ($conflink) {
           +
           +                # handle .conf file
           +                my $confcheck = check_link( $conftgt, $conflink );
           +                if ( $confcheck eq 'missing' ) {
           +                    add_link( $conftgt, $conflink ) or return 0;
           +                }
           +                elsif ( $confcheck ne 'ok' ) {
           +                    error(
           +                        "Config file $acton.conf not properly enabled: $confcheck\n"
           +                    );
           +                    return 0;
           +                }
           +            }
           +
           +            print "Enabling $obj $acton.\n";
           +            if ( $acton eq 'ssl' ) {
           +                info(     "See /usr/share/doc/apache2/README.Debian.gz on "
           +                        . "how to configure SSL and create self-signed certificates.\n"
           +                );
           +            }
           +            return add_link( $tgt, $link )
           +                && switch_marker( $obj, $act, $acton );
           +        }
           +        else {
           +            error("$name $acton not properly enabled: $check\n");
           +            return 0;
           +        }
           +    }
           +    else {
       +        if ( -e $link || -l $link ) {
           +            remove_link($link);
           +            if ( $conflink && -e $conflink ) {
           +                remove_link($conflink);
           +            }
           +            switch_marker( $obj, $act, $acton );
           +            print "$name $acton disabled.\n";
           +        }
           +        elsif ( $conflink && -e $conflink ) {
       +            print "Disabling stale config file $acton.conf.\n";
       
           +        }
           +        else {
           +            info("$name $acton already disabled\n");
           +            if ( $purge ) {
           +                switch_marker( $obj, $act, $acton );
       +            }
           +            return 1;
           +        }
           +    }
           +
           +    return 1;
           +}
           +
       +sub get_deps {
           +    my $file = shift;
           +    my $type = shift || "Depends";
           +
       +    my $fd;
           +    if ( !open( $fd, '<', $file ) ) {
           +        error("Can't open $file: $!");
           +        return;
       +    }
           +    my $line;
           +    while ( defined( $line = <$fd> ) ) {
           +        chomp $line;
           +        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {
           +            my $deps = $1;
           +            return split( /[\n\s]+/, $deps );
           +        }
           +
           +        # only check until the first non-empty non-comment line
           +        last if ( $line !~ /^\s*(?:#.*)?$/ );
           +    }
           +    return;
           +}
           +
       +sub do_deps {
           +    my $acton = shift;
           +    foreach my $d (@_) {
           +        info("Considering dependency $d for $acton:\n");
           +        if ( !doit($d) ) {
           +            error("Could not $act dependency $d for $acton, aborting\n");
           +            return 0;
           +        }
           +    }
           +    return 1;
           +}
           +
           +sub warn_deps {
           +    my $acton = shift;
           +    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";
           +    foreach my $d (@_) {
           +        info("Checking dependency $d for $acton:\n");
       +        if ( !-e "$modsenabldir/$d.load" ) {
           +            warning(
           +                "Module $d is not enabled, but $acton depends on it, aborting\n"
           +            );
           +            return 0;
       
           +    }
           +    return 1;
           +}
           +
           +sub check_conflicts {
           +    my $acton    = shift;
       +    my $haderror = 0;
       
           +        info("Considering conflict $d for $acton:\n");
           +
           +        my $tgt  = "$availdir/$d$sffx";
           +        my $link = "$enabldir/$d$sffx";
           +
       +        my $confcheck = check_link( $tgt, $link );
           +        if ( $confcheck eq 'ok' ) {
           +            error(
           +                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"
           +            );
           +
           +            # Don't return immediately, there could be several conflicts
           +            $haderror++;
           +        }
           +    }
           +
           +    if ($haderror) {
       
           +    }
           +
           +    return 1;
           +}
       +
       +sub add_link {
           +    my ( $tgt, $link ) = @_;
           +
           +    # create relative link
           +    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {
           +        die("Could not create $link: $!\n");
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
           +sub check_link {
           +    my ( $tgt, $link ) = @_;
       
           +    if ( !-e $link ) {
           +        if ( -l $link ) {
           +
           +            # points to nowhere
       +            info("Removing dangling link $link");
           +            unlink($link) or die "Could not remove $link\n";
           +        }
           +        return 'missing';
           +    }
           +
           +    if ( -e $link && !-l $link ) {
           +        return "$link is a real file, not touching it";
           +    }
           +    if ( realpath($link) ne realpath($tgt) ) {
           +        return "$link exists but does not point to $tgt, not touching it";
           +    }
           +    return 'ok';
       +}
           +
           +sub remove_link {
       
           +
           +    if ( -l $link ) {
       +        unlink($link) or die "Could not remove $link: $!\n";
           +    }
           +    elsif ( -e $link ) {
           +        error("$link is not a symbolic link, not deleting\n");
           +        return 0;
           +    }
           +    $request_reload = 1;
           +    return 1;
           +}
           +
       +sub threaded {
           +    my $result = "";
           +    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}
           +        if -x '/usr/sbin/apache2ctl';
           +    if ( $? != 0 ) {
           +
           +        # config doesn't work
           +        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )
           +        {
           +            return 0;
           +        }
           +        elsif (-e "$enabldir/mpm_worker.load"
           +            || -e "$enabldir/mpm_event.load" )
           +        {
           +            return 1;
       +        }
           +        else {
           +            error("Can't determine enabled MPM");
           +
           +            # do what user requested
           +            return 0;
           +        }
           +    }
           +    if ( $result =~ / no/ ) {
           +        return 0;
           +    }
           +    elsif ( $result =~ / yes/ ) {
           +        return 1;
           +    }
           +    else {
       
           +    }
           +}
           +
           +sub info {
           +    print @_ if !$quiet;
           +}
           +
           +sub error {
           +    print STDERR 'ERROR: ', @_;
           +}
       
           +sub warning {
           +    print STDERR 'WARNING: ', @_;
           +}
           +
           +sub is_in {
           +    my $needle = shift;
       +    foreach my $e (@_) {
           +        return 1 if $needle eq $e;
           +    }
           +    return 0;
           +}
           +
           +sub read_env_file {
           +    my $file = shift;
           +
           +    -r $file or return;
           +    my @lines = qx{env - sh -c '. $file && env'};
           +    if ($?) {
           +        die "Could not read $file\n";
           +    }
           +
           +    foreach my $l (@lines) {
           +        chomp $l;
           +        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";
           +        $ENV{$1} = $2;
           +    }
       +}
           +
           +sub switch_marker {
           +    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')
           +        if @_ != 3;
           +    my $which = shift;
           +    my $what  = shift;
           +    my $name  = shift;
           +
           +    my $mode = "admin";
           +    $mode = "maint" if $maintmode;
           +
           +    #print("switch_marker $which $what $name\n");
           +    # TODO: get rid of the magic string(s)
           +    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";
           +    my $state_marker     = "$state_marker_dir/$name";
           +    if ( !-d $state_marker_dir ) {
           +        File::Path::mkpath("$state_marker_dir")
           +            || error(
           +            "Failed to create marker directory: '$state_marker_dir'\n");
           +    }
           +
           +    # XXX: swap find with perl alternative
           +    my @markers = qx{find "$statedir" -type f -a -name "$name"};
           +    chomp(@markers);
           +    foreach (@markers) {
           +        unless ( unlink $_ ) {
           +            error("Failed to remove old marker '$_'!\n") && return 0;
           +        }
           +    }
           +    unless ($purge) {
           +        qx{touch "$state_marker"};
           +        if ( $? != 0 ) {
           +            error("Failed to create marker '$state_marker'!\n") && return 0;
           +        }
           +        return 1;
           +    }
           +}
       
       
           - change mode from '' to '0700'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * directory[/etc/apache2/ssl] action create
           - create new directory /etc/apache2/ssl
           - change mode from '' to '0755'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * directory[/var/cache/apache2] action create (up to date)
         * directory[/var/lock/apache2] action create
           - change owner from 'www-data' to 'root'
         * template[/etc/sysconfig/apache2] action create (skipped due to only_if)
         * template[/etc/apache2/envvars] action create
           - update content in file /etc/apache2/envvars from dfc55c to 49065a
           --- /etc/apache2/envvars	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/.envvars20160213-1410-3qvgbr	2016-02-13 23:37:46.689457101 +0000
           @@ -3,31 +3,21 @@
            # this won't be correct after changing uid
            unset HOME
            
           -# for supporting multiple apache2 instances
           -if [ "${APACHE_CONFDIR##/etc/apache2-}" != "${APACHE_CONFDIR}" ] ; then
           -	SUFFIX="-${APACHE_CONFDIR##/etc/apache2-}"
           -else
           -	SUFFIX=
           -fi
           -
            # Since there is no sane way to get the parsed apache2 config in scripts, some
            # settings are defined via environment variables and then used in apache2ctl,
            # /etc/init.d/apache2, /etc/logrotate.d/apache2, etc.
            export APACHE_RUN_USER=www-data
            export APACHE_RUN_GROUP=www-data
            # temporary state file location. This might be changed to /run in Wheezy+1
           -export APACHE_PID_FILE=/var/run/apache2/apache2$SUFFIX.pid
           -export APACHE_RUN_DIR=/var/run/apache2$SUFFIX
       -export APACHE_LOCK_DIR=/var/lock/apache2$SUFFIX
           -# Only /var/log/apache2 is handled by /etc/logrotate.d/apache2.
           -export APACHE_LOG_DIR=/var/log/apache2$SUFFIX
       +export APACHE_PID_FILE=/var/run/apache2/apache2.pid
           +export APACHE_RUN_DIR=/var/run/apache2
           +export APACHE_LOCK_DIR=/var/lock/apache2
           +export APACHE_LOG_DIR=/var/log/apache2
            
            ## The locale used by some modules like mod_dav
       
       
           -#. /etc/default/locale
           +export LC_ALL=C
            
           -export LANG
       
        ## The command to get the status for 'apache2ctl status'.
       
         * template[apache2.conf] action create
           - update content in file /etc/apache2/apache2.conf from 17b80a to 45bbc7
           --- /etc/apache2/apache2.conf	2014-01-07 13:23:42.000000000 +0000
           +++ /etc/apache2/.apache2.conf20160213-1410-1wq3n01	2016-02-13 23:37:46.705457102 +0000
           @@ -1,84 +1,20 @@
           -# This is the main Apache server configuration file.  It contains the
           -# configuration directives that give the server its instructions.
           -# See http://httpd.apache.org/docs/2.4/ for detailed information about
           -# the directives and /usr/share/doc/apache2/README.Debian about Debian specific
           -# hints.
            #
           +# Generated by Chef
            #
           -# Summary of how the Apache 2 configuration works in Debian:
           -# The Apache 2 web server configuration in Debian is quite different to
           -# upstream's suggested way to configure the web server. This is because Debian's
           -# default Apache2 installation attempts to make adding and removing modules,
           -# virtual hosts, and extra configuration directives as flexible as possible, in
           -# order to make automating the changes and administering the server as easy as
           -# possible.
           +# Based on the Ubuntu apache2.conf
            
           -# It is split into several files forming the configuration hierarchy outlined
           -# below, all located in the /etc/apache2/ directory:
           -#
           -#	/etc/apache2/
           -#	|-- apache2.conf
           -#	|	`--  ports.conf
           -#	|-- mods-enabled
           -#	|	|-- *.load
       	|	`-- *.conf
           -#	|-- conf-enabled
           -#	|	`-- *.conf
       -# 	`-- sites-enabled
           -#	 	`-- *.conf
           -#
           -#
       -# * apache2.conf is the main configuration file (this file). It puts the pieces
           -#   together by including all remaining configuration files when starting up the
           -#   web server.
           -#
           -# * ports.conf is always included from the main configuration file. It is
           -#   supposed to determine listening ports for incoming connections which can be
       
           -#
           -# * Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/
           -#   directories contain particular configuration snippets which manage modules,
           -#   global configuration fragments, or virtual host configurations,
           -#   respectively.
           -#
           -#   They are activated by symlinking available configuration files from their
       
           -#   helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See
           -#   their respective man pages for detailed information.
           -#
           -# * The binary is called apache2. Due to the use of environment variables, in
           -#   the default configuration, apache2 needs to be started/stopped with
           -#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not
           -#   work with the default configuration.
           +ServerRoot "/etc/apache2"
        
           -
           -# Global configuration
            #
           -
           -#
           -# ServerRoot: The top of the directory tree under which the server's
           -# configuration, error, and log files are kept.
           -#
           -# NOTE!  If you intend to place this on an NFS (or otherwise network)
           -# mounted filesystem then please read the Mutex documentation (available
           -# at <URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex>);
           -# you will save yourself a lot of trouble.
           -#
           -# Do NOT add a slash at the end of the directory path.
           -#
           -#ServerRoot "/etc/apache2"
           -
           -#
        # The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
            #
           -Mutex file:${APACHE_LOCK_DIR} default
           +Mutex file:/var/lock/apache2 default
            
            #
        # PidFile: The file in which the server should record its process
            # identification number when it starts.
           -# This needs to be set in /etc/apache2/envvars
            #
           -PidFile ${APACHE_PID_FILE}
           +PidFile /var/run/apache2/apache2.pid
            
            #
            # Timeout: The number of seconds before receives and sends time out.
           @@ -104,12 +40,57 @@
            #
            KeepAliveTimeout 5
            
           +#<IfModule unixd_module>
           +User www-data
           +Group www-data
           +#</IfModule>
            
           -# These need to be set in /etc/apache2/envvars
           -User ${APACHE_RUN_USER}
           -Group ${APACHE_RUN_GROUP}
           +# Sets the default security model of the Apache2 HTTPD server. It does
           +# not allow access to the root filesystem outside of /usr/share and /var/www/html.
           +# If your system is serving content from a sub-directory in /srv you must allow
           +# access in conf-enabled, or in any related virtual host. e.g.
           +#
       
           +#    Options Indexes FollowSymLinks
           +#    AllowOverride None
           +#    Require all granted
           +#  </Directory>
           +#
       
           +        Options FollowSymLinks
           +        AllowOverride None
           +        Require all denied
           +</Directory>
            
           +<Directory /usr/share>
       
           +        Require all granted
           +</Directory>
           +
           +<Directory /var/www/html>
           +        Options Indexes FollowSymLinks
           +        AllowOverride None
           +        Require all granted
           +</Directory>
           +
            #
           +# AccessFileName: The name of the file to look for in each directory
           +# for additional configuration directives.  See also the AllowOverride
           +# directive.
           +#
           +
       
           +
           +#
           +# The following lines prevent .htaccess and .htpasswd files from being
           +# viewed by Web clients.
           +#
           +<Files ~ "^\.ht">
           +    Require all denied
           +</Files>
           +
           +
           +#
            # HostnameLookups: Log the names of clients or just their IP addresses
            # e.g., www.apache.org (on) or 204.62.129.132 (off).
            # The default is off because it'd be overall better for the net if people
       
            # logged here.  If you *do* define an error logfile for a <VirtualHost>
            # container, that host's errors will be logged there and not here.
            #
           -ErrorLog ${APACHE_LOG_DIR}/error.log
           +ErrorLog /var/log/apache2/error.log
            
            #
           -# LogLevel: Control the severity of messages logged to the error_log.
           -# Available values: trace8, ..., trace1, debug, info, notice, warn,
           -# error, crit, alert, emerg.
           -# It is also possible to configure the log level for particular modules, e.g.
           -# "LogLevel info ssl:warn"
           +# LogLevel: Control the number of messages logged to the error_log.
       +# Possible values include: debug, info, notice, warn, error, crit,
           +# alert, emerg.
            #
            LogLevel warn
            
           +# COOK-1021: Dummy LoadModule directive to aid module installations
           +#LoadModule dummy_module modules/mod_dummy.so
           +
            # Include module configuration:
           -IncludeOptional mods-enabled/*.load
           -IncludeOptional mods-enabled/*.conf
           +IncludeOptional /etc/apache2/mods-enabled/*.load
           +IncludeOptional /etc/apache2/mods-enabled/*.conf
            
           -# Include list of ports to listen on
       
            
           +# Include ports listing
           +Include /etc/apache2/ports.conf
            
           -# Sets the default security model of the Apache2 HTTPD server. It does
           -# not allow access to the root filesystem outside of /usr/share and /var/www.
           -# The former is used by web applications packaged in Debian,
           -# the latter may be used for local directories served by the web server. If
           -# your system is serving content from a sub-directory in /srv you must allow
           -# access here, or in any related virtual host.
           -<Directory />
           -	Options FollowSymLinks
           -	AllowOverride None
           -	Require all denied
           -</Directory>
           -
           -<Directory /usr/share>
           -	AllowOverride None
           -	Require all granted
           -</Directory>
           -
           -<Directory /var/www/>
           -	Options Indexes FollowSymLinks
           -	AllowOverride None
       	Require all granted
           -</Directory>
           -
           -#<Directory /srv/>
           -#	Options Indexes FollowSymLinks
           -#	AllowOverride None
           -#	Require all granted
           -#</Directory>
           -
           -
           -
           -
           -# AccessFileName: The name of the file to look for in each directory
           -# for additional configuration directives.  See also the AllowOverride
           -# directive.
            #
           -AccessFileName .htaccess
       
       -#
           -# The following lines prevent .htaccess and .htpasswd files from being
           -# viewed by Web clients.
           -#
           -<FilesMatch "^\.ht">
           -	Require all denied
           -</FilesMatch>
           -
           -
           -#
            # The following directives define some format nicknames for use with
           -# a CustomLog directive.
           +# a CustomLog directive (see below).
            #
           -# These deviate from the Common Log Format definitions in that they use %O
           -# (the actual bytes sent including headers) instead of %b (the size of the
           -# requested file), because the latter makes it impossible to detect partial
           -# requests.
           -#
           -# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.
           -# Use mod_remoteip instead.
           -#
        LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
           -LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
           -LogFormat "%h %l %u %t \"%r\" %>s %O" common
           +LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
           +LogFormat "%h %l %u %t \"%r\" %>s %b" common
            LogFormat "%{Referer}i -> %U" referer
            LogFormat "%{User-agent}i" agent
           +#
            
           -# Include of directories ignores editors' and dpkg's backup files,
           -# see README.Debian for details.
           -
            # Include generic snippets of statements
           -IncludeOptional conf-enabled/*.conf
           +IncludeOptional /etc/apache2/conf-enabled/*.conf
            
            # Include the virtual host configurations:
           -IncludeOptional sites-enabled/*.conf
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
       
         * file[/etc/apache2/conf-available/security] action delete (up to date)
         * template[/etc/apache2/conf-available/security.conf] action create
           - update content in file /etc/apache2/conf-available/security.conf from a62d94 to b8213b
           --- /etc/apache2/conf-available/security.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/conf-available/.security.conf20160213-1410-19atouo	2016-02-13 23:37:46.733457103 +0000
           @@ -1,17 +1,3 @@
           -#
           -# Disable access to the entire file system except for the directories that
           -# are explicitly allowed later.
           -#
           -# This currently breaks the configurations that come with some web application
           -# Debian packages.
           -#
           -#<Directory />
           -#   AllowOverride None
           -#   Order Deny,Allow
           -#   Deny from all
           -#</Directory>
           -
           -
            # Changing the following options will not really affect the security of the
            # server, but might make attacks slightly more difficult in some cases.
            
           @@ -22,9 +8,8 @@
            # and compiled in modules.
            # Set to one of:  Full | OS | Minimal | Minor | Major | Prod
       
           -#ServerTokens Minimal
           -ServerTokens OS
           -#ServerTokens Full
           +#
           +ServerTokens Prod
            
            #
            # Optionally add a line containing the server version and virtual host
           @@ -33,7 +18,7 @@
            # documents or custom error documents).
            # Set to "EMail" to also include a mailto: link to the ServerAdmin.
            # Set to one of:  On | Off | EMail
           -#ServerSignature Off
       
            ServerSignature On
            
            #
           @@ -43,33 +28,6 @@
            # diagnostic purposes).
            #
            # Set to one of:  On | Off | extended
       
           -#TraceEnable On
           -
            #
           -# Forbid access to version control directories
           -#
           -# If you use version control systems in your document root, you should
           -# probably deny access to their directories. For example, for subversion:
       
           -#<DirectoryMatch "/\.svn">
       -#   Require all denied
           -#</DirectoryMatch>
           -
           -#
           -# Setting this header will prevent MSIE from interpreting files as something
           -# else than declared by the content type in the HTTP headers.
       -# Requires mod_headers to be enabled.
           -#
           -#Header set X-Content-Type-Options: "nosniff"
           -
           -#
           -# Setting this header will prevent other sites from embedding pages from this
           -# site as frames. This defends against clickjacking attacks.
           -# Requires mod_headers to be enabled.
           -#
           -#Header set X-Frame-Options: "sameorigin"
           -
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
       
         * execute[a2enconf security.conf] action run (skipped due to not_if)
         * file[/etc/apache2/conf-available/charset] action delete (up to date)
         * template[/etc/apache2/conf-available/charset.conf] action create
           - update content in file /etc/apache2/conf-available/charset.conf from 1b4173 to 543c6c
           --- /etc/apache2/conf-available/charset.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/conf-available/.charset.conf20160213-1410-rehe0c	2016-02-13 23:37:46.749457103 +0000
           @@ -4,6 +4,4 @@
            # in meta http-equiv or xml encoding tags.
            
            #AddDefaultCharset UTF-8
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
         * execute[a2enconf charset.conf] action run (skipped due to not_if)
         * file[/etc/apache2/ports] action delete (up to date)
         * template[/etc/apache2/ports.conf] action create
           - update content in file /etc/apache2/ports.conf from 9d2d53 to 1157e5
           --- /etc/apache2/ports.conf	2014-01-07 13:23:42.000000000 +0000
           +++ /etc/apache2/.ports.conf20160213-1410-ojthf7	2016-02-13 23:37:46.761457104 +0000
           @@ -1,16 +1,5 @@
           -# If you just change the port or add more ports here, you will likely also
           -# have to change the VirtualHost statement in
           -# /etc/apache2/sites-enabled/000-default.conf
           +# This file was generated by Chef for default-ubuntu-1404.
           +# Do NOT modify this file by hand!
            
           -Listen 80
           -
           -<IfModule ssl_module>
           -	Listen 443
           -</IfModule>
           -
       -<IfModule mod_gnutls.c>
           -	Listen 443
           -</IfModule>
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
       
       Recipe: apache2::mpm_event
         * file[/etc/apache2/mods-available/mpm_prefork.load] action create
           - update content in file /etc/apache2/mods-available/mpm_prefork.load from 6e2590 to 0d8639
           --- /etc/apache2/mods-available/mpm_prefork.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.mpm_prefork.load20160213-1410-1crkf0b	2016-02-13 23:37:46.769457104 +0000
           @@ -1,3 +1,2 @@
           -# Conflicts: mpm_event mpm_worker mpm_itk
            LoadModule mpm_prefork_module /usr/lib/apache2/modules/mod_mpm_prefork.so
         * execute[a2dismod mpm_prefork] action run (skipped due to only_if)
         * file[/etc/apache2/mods-available/mpm_worker.load] action create
           - update content in file /etc/apache2/mods-available/mpm_worker.load from c49a99 to 24badb
           --- /etc/apache2/mods-available/mpm_worker.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.mpm_worker.load20160213-1410-10r7eb5	2016-02-13 23:37:46.777457104 +0000
           @@ -1,3 +1,2 @@
           -# Conflicts: mpm_event mpm_prefork mpm_itk
            LoadModule mpm_worker_module /usr/lib/apache2/modules/mod_mpm_worker.so
         * execute[a2dismod mpm_worker] action run (skipped due to only_if)
         * template[/etc/apache2/mods-available/mpm_event.conf] action create
           - update content in file /etc/apache2/mods-available/mpm_event.conf from 4318a0 to 7be572
           --- /etc/apache2/mods-available/mpm_event.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.mpm_event.conf20160213-1410-txishm	2016-02-13 23:37:46.785457105 +0000
           @@ -1,19 +1,18 @@
            # event MPM
           -# StartServers: initial number of server processes to start
           -# MinSpareThreads: minimum number of worker threads which are kept spare
           -# MaxSpareThreads: maximum number of worker threads which are kept spare
           -# ThreadsPerChild: constant number of worker threads in each server process
           -# MaxRequestWorkers: maximum number of worker threads
           -# MaxConnectionsPerChild: maximum number of requests a server process serves
            <IfModule mpm_event_module>
           -	StartServers			 2
           -	MinSpareThreads		 25
           -	MaxSpareThreads		 75
           -	ThreadLimit			 64
           -	ThreadsPerChild		 25
       -	MaxRequestWorkers	  150
           -	MaxConnectionsPerChild   0
           +  # StartServers: initial number of server processes to start
           +  # MinSpareThreads: minimum number of worker threads which are kept spare
           +  # MaxSpareThreads: maximum number of worker threads which are kept spare
           +  # ThreadsPerChild: constant number of worker threads in each server process
           +  # MaxRequestWorkers: maximum number of worker threads
           +  # MaxConnectionsPerChild: maximum number of requests a server process serves
           +  StartServers           4
           +  MinSpareThreads        64
           +  MaxSpareThreads        192
           +  ThreadsPerChild        64
           +  MaxRequestWorkers      1024
           +  MaxConnectionsPerChild 0
       +  ThreadLimit            192
           +  ServerLimit            16
            </IfModule>
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
         * file[/etc/apache2/mods-available/mpm_event.load] action create
           - update content in file /etc/apache2/mods-available/mpm_event.load from 0327cb to 466e14
           --- /etc/apache2/mods-available/mpm_event.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.mpm_event.load20160213-1410-3bcajv	2016-02-13 23:37:46.801457105 +0000
           @@ -1,3 +1,2 @@
           -# Conflicts: mpm_worker mpm_prefork mpm_itk
            LoadModule mpm_event_module /usr/lib/apache2/modules/mod_mpm_event.so
         * execute[a2enmod mpm_event] action run (skipped due to not_if)
       Recipe: apache2::mod_status
         * template[/etc/apache2/mods-available/status.conf] action create
           - update content in file /etc/apache2/mods-available/status.conf from 662455 to ed62d0
           --- /etc/apache2/mods-available/status.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.status.conf20160213-1410-1j3ua54	2016-02-13 23:37:46.809457106 +0000
           @@ -1,30 +1,31 @@
            <IfModule mod_status.c>
           -	# Allow server status reports generated by mod_status,
           -	# with the URL of http://servername/server-status
           -	# Uncomment and change the "192.0.2.0/24" to allow access from other hosts.
           +  #
           +  # Allow server status reports generated by mod_status,
           +  # with the URL of http://servername/server-status
           +  # Uncomment and change the ".example.com" to allow
           +  # access from other hosts.
           +  #
           +  <Location /server-status>
           +    SetHandler server-status
           +    Require local
       
           +  </Location>
            
           -	<Location /server-status>
           -		SetHandler server-status
           -		Require local
       		#Require ip 192.0.2.0/24
           -	</Location>
           +  #
           +  # ExtendedStatus controls whether Apache will generate "full" status
           +  # information (ExtendedStatus On) or just basic information (ExtendedStatus
           +  # Off) when the "server-status" handler is called. The default is Off.
           +  #
           +  ExtendedStatus Off
            
           -	# Keep track of extended status information for each request
           -	ExtendedStatus On
           +  # Determine if mod_status displays the first 63 characters of a request or
           +  # the last 63, assuming the request itself is greater than 63 chars.
           +  # Default: Off
           +  #SeeRequestTail On
            
           -	# Determine if mod_status displays the first 63 characters of a request or
           -	# the last 63, assuming the request itself is greater than 63 chars.
           -	# Default: Off
           -	#SeeRequestTail On
           -
           -
           -	<IfModule mod_proxy.c>
           -		# Show Proxy LoadBalancer status in mod_status
           -		ProxyStatus On
           -	</IfModule>
           -
           -
           +  <IfModule mod_proxy.c>
           +     # Show Proxy LoadBalancer status in mod_status
           +     ProxyStatus On
           +  </IfModule>
            </IfModule>
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
         * file[/etc/apache2/mods-available/status.load] action create (up to date)
         * execute[a2enmod status] action run (skipped due to not_if)
       Recipe: apache2::mod_alias
         * template[/etc/apache2/mods-available/alias.conf] action create
           - update content in file /etc/apache2/mods-available/alias.conf from 51f6f3 to 167573
           --- /etc/apache2/mods-available/alias.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.alias.conf20160213-1410-1fqrolm	2016-02-13 23:37:46.825457106 +0000
           @@ -1,25 +1,23 @@
            <IfModule alias_module>
           -	# Aliases: Add here as many aliases as you need (with no limit). The format is
           -	# Alias fakename realname
           -	#
           -	# Note that if you include a trailing / on fakename then the server will
           -	# require it to be present in the URL.  So "/icons" isn't aliased in this
           -	# example, only "/icons/".  If the fakename is slash-terminated, then the
           -	# realname must also be slash terminated, and if the fakename omits the
           -	# trailing slash, the realname must also omit it.
           -	#
           -	# We include the /icons/ alias for FancyIndexed directory listings.  If
           -	# you do not use FancyIndexing, you may comment this out.
           +  #
           +  # Aliases: Add here as many aliases as you need (with no limit). The format is
           +  # Alias fakename realname
           +  #
           +  # Note that if you include a trailing / on fakename then the server will
           +  # require it to be present in the URL.  So "/icons" isn't aliased in this
           +  # example, only "/icons/".  If the fakename is slash-terminated, then the
           +  # realname must also be slash terminated, and if the fakename omits the
           +  # trailing slash, the realname must also omit it.
           +  #
           +  # We include the /icons/ alias for FancyIndexed directory listings.  If
           +  # you do not use FancyIndexing, you may comment this out.
           +  #
           +  Alias /icons/ "/usr/share/apache2/icons/"
            
           -	Alias /icons/ "/usr/share/apache2/icons/"
           -
           -	<Directory "/usr/share/apache2/icons">
           -		Options FollowSymlinks
           -		AllowOverride None
           -		Require all granted
           -	</Directory>
           -
           +  <Directory "/usr/share/apache2/icons">
           +    Options Indexes MultiViews
       
           +    Require all granted
           +  </Directory>
            </IfModule>
       
       
         * file[/etc/apache2/mods-available/alias.load] action create (up to date)
         * execute[a2enmod alias] action run (skipped due to not_if)
       Recipe: apache2::mod_auth_basic
         * file[/etc/apache2/mods-available/auth_basic.load] action create
           - update content in file /etc/apache2/mods-available/auth_basic.load from a4b933 to 0d1116
           --- /etc/apache2/mods-available/auth_basic.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.auth_basic.load20160213-1410-7lmcry	2016-02-13 23:37:46.841457107 +0000
           @@ -1,3 +1,2 @@
           -# Depends: authn_core
            LoadModule auth_basic_module /usr/lib/apache2/modules/mod_auth_basic.so
         * execute[a2enmod auth_basic] action run (skipped due to not_if)
       Recipe: apache2::mod_authn_core
         * file[/etc/apache2/mods-available/authn_core.load] action create (up to date)
         * execute[a2enmod authn_core] action run (skipped due to not_if)
       Recipe: apache2::mod_authn_file
         * file[/etc/apache2/mods-available/authn_file.load] action create (up to date)
         * execute[a2enmod authn_file] action run (skipped due to not_if)
       Recipe: apache2::mod_authz_core
         * file[/etc/apache2/mods-available/authz_core.load] action create (up to date)
         * execute[a2enmod authz_core] action run (skipped due to not_if)
       Recipe: apache2::mod_authz_groupfile
         * file[/etc/apache2/mods-available/authz_groupfile.load] action create
           - update content in file /etc/apache2/mods-available/authz_groupfile.load from 8bc67b to 214f51
           --- /etc/apache2/mods-available/authz_groupfile.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.authz_groupfile.load20160213-1410-pkuhu3	2016-02-13 23:37:46.861457108 +0000
           @@ -1,3 +1,2 @@
           -# Depends: authz_core
            LoadModule authz_groupfile_module /usr/lib/apache2/modules/mod_authz_groupfile.so
         * execute[a2enmod authz_groupfile] action run
           - execute /usr/sbin/a2enmod authz_groupfile
       Recipe: apache2::mod_authz_host
       
           - update content in file /etc/apache2/mods-available/authz_host.load from 66e656 to a6f9be
           --- /etc/apache2/mods-available/authz_host.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.authz_host.load20160213-1410-8glkz2	2016-02-13 23:37:46.917457110 +0000
           @@ -1,3 +1,2 @@
           -# Depends: authz_core
            LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
         * execute[a2enmod authz_host] action run (skipped due to not_if)
       Recipe: apache2::mod_authz_user
         * file[/etc/apache2/mods-available/authz_user.load] action create
           - update content in file /etc/apache2/mods-available/authz_user.load from d219d3 to 854c87
           --- /etc/apache2/mods-available/authz_user.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.authz_user.load20160213-1410-1d1kgw1	2016-02-13 23:37:46.925457110 +0000
           @@ -1,3 +1,2 @@
           -# Depends: authz_core
            LoadModule authz_user_module /usr/lib/apache2/modules/mod_authz_user.so
         * execute[a2enmod authz_user] action run (skipped due to not_if)
       Recipe: apache2::mod_autoindex
         * template[/etc/apache2/mods-available/autoindex.conf] action create
           - update content in file /etc/apache2/mods-available/autoindex.conf from 727807 to 8e7e44
           --- /etc/apache2/mods-available/autoindex.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.autoindex.conf20160213-1410-c4wxad	2016-02-13 23:37:46.933457111 +0000
           @@ -1,97 +1,101 @@
            <IfModule mod_autoindex.c>
           -	# Directives controlling the display of server-generated directory listings.
           +  #
           +  # Directives controlling the display of server-generated directory listings.
           +  #
            
           -	#
           -	# IndexOptions: Controls the appearance of server-generated directory
       	# listings.
           -	# Remove/replace the "Charset=UTF-8" if you don't use UTF-8 for your filenames.
           -	IndexOptions FancyIndexing VersionSort HTMLTable NameWidth=* DescriptionWidth=* Charset=UTF-8
           +  #
           +  # IndexOptions: Controls the appearance of server-generated directory
           +  # listings.
           +  # Remove/replace the "Charset=UTF-8" if you don't use UTF-8 for your filenames.
           +  #
           +  IndexOptions FancyIndexing VersionSort HTMLTable NameWidth=* DescriptionWidth=* Charset=UTF-8
            
           -	#
           -	# AddIcon* directives tell the server which icon to show for different
           -	# files or filename extensions.  These are only displayed for
           -	# FancyIndexed directories.
           -	AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip x-bzip2
           +  #
           +  # AddIcon* directives tell the server which icon to show for different
           +  # files or filename extensions.  These are only displayed for
           +  # FancyIndexed directories.
           +  #
       
            
       -	AddIconByType (TXT,/icons/text.gif) text/*
           -	AddIconByType (IMG,/icons/image2.gif) image/*
           -	AddIconByType (SND,/icons/sound2.gif) audio/*
           -	AddIconByType (VID,/icons/movie.gif) video/*
           +  AddIconByType (TXT,/icons/text.gif) text/*
           +  AddIconByType (IMG,/icons/image2.gif) image/*
           +  AddIconByType (SND,/icons/sound2.gif) audio/*
           +  AddIconByType (VID,/icons/movie.gif) video/*
            
           -	AddIcon /icons/binary.gif .bin .exe
           -	AddIcon /icons/binhex.gif .hqx
           -	AddIcon /icons/tar.gif .tar
           -	AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv
           -	AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip
           -	AddIcon /icons/a.gif .ps .ai .eps
           -	AddIcon /icons/layout.gif .html .shtml .htm .pdf
           -	AddIcon /icons/text.gif .txt
       	AddIcon /icons/c.gif .c
           -	AddIcon /icons/p.gif .pl .py
           -	AddIcon /icons/f.gif .for
           -	AddIcon /icons/dvi.gif .dvi
           -	AddIcon /icons/uuencoded.gif .uu
           -	AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl
       	AddIcon /icons/tex.gif .tex
           -	# It's a suffix rule, so simply matching "core" matches "score" as well !
           -	AddIcon /icons/bomb.gif /core
           -	AddIcon (SND,/icons/sound2.gif) .ogg
           -	AddIcon (VID,/icons/movie.gif) .ogm
           +  AddIcon /icons/binary.gif .bin .exe
           +  AddIcon /icons/binhex.gif .hqx
           +  AddIcon /icons/tar.gif .tar
           +  AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv
           +  AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip
           +  AddIcon /icons/a.gif .ps .ai .eps
           +  AddIcon /icons/layout.gif .html .shtml .htm .pdf
           +  AddIcon /icons/text.gif .txt
           +  AddIcon /icons/c.gif .c
           +  AddIcon /icons/p.gif .pl .py
           +  AddIcon /icons/f.gif .for
           +  AddIcon /icons/dvi.gif .dvi
           +  AddIcon /icons/uuencoded.gif .uu
           +  AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl
           +  AddIcon /icons/tex.gif .tex
       
           +  AddIcon /icons/bomb.gif /core
           +  AddIcon (SND,/icons/sound2.gif) .ogg
           +  AddIcon (VID,/icons/movie.gif) .ogm
            
           -	AddIcon /icons/back.gif ..
       	AddIcon /icons/hand.right.gif README
           -	AddIcon /icons/folder.gif ^^DIRECTORY^^
           -	AddIcon /icons/blank.gif ^^BLANKICON^^
           +  AddIcon /icons/back.gif ..
           +  AddIcon /icons/hand.right.gif README
           +  AddIcon /icons/folder.gif ^^DIRECTORY^^
           +  AddIcon /icons/blank.gif ^^BLANKICON^^
            
           -	# Default icons for OpenDocument format
           -	AddIcon /icons/odf6odt-20x22.png .odt
           -	AddIcon /icons/odf6ods-20x22.png .ods
       	AddIcon /icons/odf6odp-20x22.png .odp
           -	AddIcon /icons/odf6odg-20x22.png .odg
           -	AddIcon /icons/odf6odc-20x22.png .odc
           -	AddIcon /icons/odf6odf-20x22.png .odf
           -	AddIcon /icons/odf6odb-20x22.png .odb
           -	AddIcon /icons/odf6odi-20x22.png .odi
           -	AddIcon /icons/odf6odm-20x22.png .odm
       
           +  AddIcon /icons/odf6odt-20x22.png .odt
           +  AddIcon /icons/odf6ods-20x22.png .ods
           +  AddIcon /icons/odf6odp-20x22.png .odp
           +  AddIcon /icons/odf6odg-20x22.png .odg
           +  AddIcon /icons/odf6odc-20x22.png .odc
           +  AddIcon /icons/odf6odf-20x22.png .odf
           +  AddIcon /icons/odf6odb-20x22.png .odb
           +  AddIcon /icons/odf6odi-20x22.png .odi
           +  AddIcon /icons/odf6odm-20x22.png .odm
            
           -	AddIcon /icons/odf6ott-20x22.png .ott
           -	AddIcon /icons/odf6ots-20x22.png .ots
           -	AddIcon /icons/odf6otp-20x22.png .otp
       
           -	AddIcon /icons/odf6otc-20x22.png .otc
           -	AddIcon /icons/odf6otf-20x22.png .otf
           -	AddIcon /icons/odf6oti-20x22.png .oti
           -	AddIcon /icons/odf6oth-20x22.png .oth
           +  AddIcon /icons/odf6ott-20x22.png .ott
           +  AddIcon /icons/odf6ots-20x22.png .ots
           +  AddIcon /icons/odf6otp-20x22.png .otp
           +  AddIcon /icons/odf6otg-20x22.png .otg
           +  AddIcon /icons/odf6otc-20x22.png .otc
           +  AddIcon /icons/odf6otf-20x22.png .otf
           +  AddIcon /icons/odf6oti-20x22.png .oti
       
            
           -	#
           -	# DefaultIcon is which icon to show for files which do not have an icon
           -	# explicitly set.
           -	DefaultIcon /icons/unknown.gif
           +  #
       +  # DefaultIcon is which icon to show for files which do not have an icon
           +  # explicitly set.
           +  #
           +  DefaultIcon /icons/unknown.gif
            
           -	#
           -	# AddDescription allows you to place a short description after a file in
           -	# server-generated indexes.  These are only displayed for FancyIndexed
           -	# directories.
           -	# Format: AddDescription "description" filename
           -	#AddDescription "GZIP compressed document" .gz
           -	#AddDescription "tar archive" .tar
           -	#AddDescription "GZIP compressed tar archive" .tgz
           +  #
           +  # AddDescription allows you to place a short description after a file in
           +  # server-generated indexes.  These are only displayed for FancyIndexed
           +  # directories.
           +  # Format: AddDescription "description" filename
           +  #
           +  #AddDescription "GZIP compressed document" .gz
           +  #AddDescription "tar archive" .tar
           +  #AddDescription "GZIP compressed tar archive" .tgz
            
       -	#
           -	# ReadmeName is the name of the README file the server will look for by
           -	# default, and append to directory listings.
       
           -	# HeaderName is the name of a file which should be prepended to
           -	# directory indexes
           -	ReadmeName README.html
           -	HeaderName HEADER.html
           +  #
           +  # ReadmeName is the name of the README file the server will look for by
           +  # default, and append to directory listings.
           +  #
           +  # HeaderName is the name of a file which should be prepended to
           +  # directory indexes.
           +  ReadmeName README.html
           +  HeaderName HEADER.html
            
           -	#
       	# IndexIgnore is a set of filenames which directory indexing should ignore
       -	# and not include in the listing.  Shell-style wildcarding is permitted.
           -	IndexIgnore .??* *~ *# RCS CVS *,v *,t
           -
           +  #
           +  # IndexIgnore is a set of filenames which directory indexing should ignore
       
           +  #
       +  IndexIgnore .??* *~ *# RCS CVS *,v *,t
       
           -
       
         * file[/etc/apache2/mods-available/autoindex.load] action create (up to date)
         * execute[a2enmod autoindex] action run (skipped due to not_if)
       Recipe: apache2::mod_dir
         * template[/etc/apache2/mods-available/dir.conf] action create
           - update content in file /etc/apache2/mods-available/dir.conf from f02232 to 5d2651
           --- /etc/apache2/mods-available/dir.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.dir.conf20160213-1410-9b9i1m	2016-02-13 23:37:46.961457112 +0000
           @@ -1,6 +1,4 @@
            <IfModule mod_dir.c>
           -	DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
           +  DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
            </IfModule>
           -
           -# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
         * file[/etc/apache2/mods-available/dir.load] action create (up to date)
         * execute[a2enmod dir] action run (skipped due to not_if)
       Recipe: apache2::mod_env
         * file[/etc/apache2/mods-available/env.load] action create (up to date)
         * execute[a2enmod env] action run (skipped due to not_if)
       Recipe: apache2::mod_mime
         * template[/etc/apache2/mods-available/mime.conf] action create
           - update content in file /etc/apache2/mods-available/mime.conf from 967722 to 76e7d0
           --- /etc/apache2/mods-available/mime.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.mime.conf20160213-1410-18o764b	2016-02-13 23:37:46.977457113 +0000
           @@ -1,250 +1,193 @@
            <IfModule mod_mime.c>
           +  #
           +  # TypesConfig points to the file containing the list of mappings from
           +  # filename extension to MIME-type.
           +  #
           +  TypesConfig /etc/mime.types
            
           -	#
           -	# TypesConfig points to the file containing the list of mappings from
           -	# filename extension to MIME-type.
           -	#
           -	TypesConfig /etc/mime.types
           +  #
           +  # AddType allows you to add to or override the MIME configuration
           +  # file mime.types for specific file types.
           +  #
           +  #AddType application/x-gzip .tgz
           +  #
           +  # AddEncoding allows you to have certain browsers uncompress
           +  # information on the fly. Note: Not all browsers support this.
           +  # Despite the name similarity, the following Add* directives have
           +  # nothing to do with the FancyIndexing customization directives above.
           +  #
           +  #AddEncoding x-compress .Z
       
           +  #AddEncoding x-bzip2 .bz2
           +  #
           +  # If the AddEncoding directives above are commented-out, then you
           +  # probably should define those extensions to indicate media types:
       +  #
           +  AddType application/x-compress .Z
           +  AddType application/x-gzip .gz .tgz
           +  AddType application/x-bzip2 .bz2
            
           -	#
           -	# AddType allows you to add to or override the MIME configuration
           -	# file mime.types for specific file types.
       -	#
           -	#AddType application/x-gzip .tgz
           -	#
           -	# AddEncoding allows you to have certain browsers uncompress
           -	# information on the fly. Note: Not all browsers support this.
           -	# Despite the name similarity, the following Add* directives have
           -	# nothing to do with the FancyIndexing customization directives above.
           -	#
       	#AddEncoding x-compress .Z
           -	#AddEncoding x-gzip .gz .tgz
           -	#AddEncoding x-bzip2 .bz2
           -	#
           -	# If the AddEncoding directives above are commented-out, then you
       -	# probably should define those extensions to indicate media types:
           -	#
           -	AddType application/x-compress .Z
           -	AddType application/x-gzip .gz .tgz
           -	AddType application/x-bzip2 .bz2
           +  AddType image/svg+xml svg svgz
       +  AddEncoding gzip svgz
            
           -	#
           -	# DefaultLanguage and AddLanguage allows you to specify the language of 
           -	# a document. You can then use content negotiation to give a browser a 
           -	# file in a language the user can understand.
           -	#
           -	# Specify a default language. This means that all data
           -	# going out without a specific language tag (see below) will 
           -	# be marked with this one. You probably do NOT want to set
           -	# this unless you are sure it is correct for all cases.
           -	#
           -	# * It is generally better to not mark a page as 
           -	# * being a certain language than marking it with the wrong
           -	# * language!
           -	#
           -	# DefaultLanguage nl
           -	#
           -	# Note 1: The suffix does not have to be the same as the language
           -	# keyword --- those with documents in Polish (whose net-standard
           -	# language code is pl) may wish to use "AddLanguage pl .po" to
           -	# avoid the ambiguity with the common suffix for perl scripts.
           -	#
           -	# Note 2: The example entries below illustrate that in some cases 
           -	# the two character 'Language' abbreviation is not identical to 
           -	# the two character 'Country' code for its country,
           -	# E.g. 'Danmark/dk' versus 'Danish/da'.
       	#
           -	# Note 3: In the case of 'ltz' we violate the RFC by using a three char
           -	# specifier. There is 'work in progress' to fix this and get
           -	# the reference data for rfc1766 cleaned up.
           -	#
           -	# Catalan (ca) - Croatian (hr) - Czech (cs) - Danish (da) - Dutch (nl)
           -	# English (en) - Esperanto (eo) - Estonian (et) - French (fr) - German (de)
           -	# Greek-Modern (el) - Hebrew (he) - Italian (it) - Japanese (ja)
           -	# Korean (ko) - Luxembourgeois* (ltz) - Norwegian Nynorsk (nn)
           -	# Norwegian (no) - Polish (pl) - Portugese (pt)
           -	# Brazilian Portuguese (pt-BR) - Russian (ru) - Swedish (sv)
           -	# Simplified Chinese (zh-CN) - Spanish (es) - Traditional Chinese (zh-TW)
           -	#
           -	AddLanguage am .amh
           -	AddLanguage ar .ara
           -	AddLanguage be .be
           -	AddLanguage bg .bg
           -	AddLanguage bn .bn
           -	AddLanguage br .br
           -	AddLanguage bs .bs
           -	AddLanguage ca .ca
           -	AddLanguage cs .cz .cs
           -	AddLanguage cy .cy
           -	AddLanguage da .dk
           -	AddLanguage de .de
           -	AddLanguage dz .dz
           -	AddLanguage el .el
           -	AddLanguage en .en
           -	AddLanguage eo .eo
           -	# es is ecmascript in /etc/mime.types
           -	RemoveType  es
           -	AddLanguage es .es
           -	AddLanguage et .et
           -	AddLanguage eu .eu
           -	AddLanguage fa .fa
           -	AddLanguage fi .fi
           -	AddLanguage fr .fr
           -	AddLanguage ga .ga
           -	AddLanguage gl .glg
           -	AddLanguage gu .gu
           -	AddLanguage he .he
           -	AddLanguage hi .hi
           -	AddLanguage hr .hr
           -	AddLanguage hu .hu
           -	AddLanguage hy .hy
           -	AddLanguage id .id
           -	AddLanguage is .is
           -	AddLanguage it .it
           -	AddLanguage ja .ja
           -	AddLanguage ka .ka
           -	AddLanguage kk .kk
           -	AddLanguage km .km
           -	AddLanguage kn .kn
           -	AddLanguage ko .ko
           -	AddLanguage ku .ku
       -	AddLanguage lo .lo
           -	AddLanguage lt .lt
           -	AddLanguage ltz .ltz
           -	AddLanguage lv .lv
       	AddLanguage mg .mg
           -	AddLanguage mk .mk
           -	AddLanguage ml .ml
           -	AddLanguage mr .mr
           -	AddLanguage ms .msa
       AddLanguage nb .nob
           -	AddLanguage ne .ne
           -	AddLanguage nl .nl
           -	AddLanguage nn .nn
           -	AddLanguage no .no
           -	AddLanguage pa .pa
       -	AddLanguage pl .po
           -	AddLanguage pt-BR .pt-br
           -	AddLanguage pt .pt
       -	AddLanguage ro .ro
           -	AddLanguage ru .ru
           -	AddLanguage sa .sa
           -	AddLanguage se .se
           -	AddLanguage si .si
       AddLanguage sk .sk
           -	AddLanguage sl .sl
           -	AddLanguage sq .sq
           -	AddLanguage sr .sr
           -	AddLanguage sv .sv
       	AddLanguage ta .ta
       -	AddLanguage te .te
           -	AddLanguage th .th
           -	AddLanguage tl .tl
           -	RemoveType  tr
       
           -	AddLanguage tr .tr
           -	AddLanguage uk .uk
           -	AddLanguage ur .ur
       -	AddLanguage vi .vi
           -	AddLanguage wo .wo
           -	AddLanguage xh .xh
           -	AddLanguage zh-CN .zh-cn
       -	AddLanguage zh-TW .zh-tw
           +  #
           +  # DefaultLanguage and AddLanguage allows you to specify the language of
           +  # a document. You can then use content negotiation to give a browser a
           +  # file in a language the user can understand.
           +  #
       +  # Specify a default language. This means that all data
           +  # going out without a specific language tag (see below) will
           +  # be marked with this one. You probably do NOT want to set
           +  # this unless you are sure it is correct for all cases.
           +  #
           +  # * It is generally better to not mark a page as
           +  # * being a certain language than marking it with the wrong
           +  # * language!
           +  #
           +  # DefaultLanguage nl
           +  #
           +  # Note 1: The suffix does not have to be the same as the language
           +  # keyword --- those with documents in Polish (whose net-standard
           +  # language code is pl) may wish to use "AddLanguage pl .po" to
           +  # avoid the ambiguity with the common suffix for perl scripts.
           +  #
       +  # Note 2: The example entries below illustrate that in some cases
           +  # the two character 'Language' abbreviation is not identical to
           +  # the two character 'Country' code for its country,
           +  # E.g. 'Danmark/dk' versus 'Danish/da'.
           +  #
           +  # Note 3: In the case of 'ltz' we violate the RFC by using a three char
           +  # specifier. There is 'work in progress' to fix this and get
           +  # the reference data for rfc1766 cleaned up.
           +  #
           +  # Catalan (ca) - Croatian (hr) - Czech (cs) - Danish (da) - Dutch (nl)
           +  # English (en) - Esperanto (eo) - Estonian (et) - French (fr) - German (de)
           +  # Greek-Modern (el) - Hebrew (he) - Italian (it) - Japanese (ja)
           +  # Korean (ko) - Luxembourgeois* (ltz) - Norwegian Nynorsk (nn)
           +  # Norwegian (no) - Polish (pl) - Portugese (pt)
           +  # Brazilian Portuguese (pt-BR) - Russian (ru) - Swedish (sv)
           +  # Simplified Chinese (zh-CN) - Spanish (es) - Traditional Chinese (zh-TW)
           +  #
           +  AddLanguage ca .ca
           +  AddLanguage cs .cz .cs
           +  AddLanguage da .dk
           +  AddLanguage de .de
           +  AddLanguage el .el
           +  AddLanguage en .en
           +  AddLanguage eo .eo
           +  # See README.Debian for Spanish
           +  AddLanguage es .es
       +  AddLanguage et .et
           +  AddLanguage fr .fr
           +  AddLanguage he .he
           +  AddLanguage hr .hr
           +  AddLanguage it .it
           +  AddLanguage ja .ja
           +  AddLanguage ko .ko
           +  AddLanguage ltz .ltz
           +  AddLanguage nl .nl
           +  AddLanguage nn .nn
           +  AddLanguage no .no
           +  AddLanguage pl .po
           +  AddLanguage pt .pt
       
           +  AddLanguage ru .ru
       +  AddLanguage sv .sv
       +  # See README.Debian for Turkish
           +  AddLanguage tr .tr
           +  AddLanguage zh-CN .zh-cn
           +  AddLanguage zh-TW .zh-tw
            
       -	#
           -	# Commonly used filename extensions to character sets. You probably
           -	# want to avoid clashes with the language extensions, unless you
           -	# are good at carefully testing your setup after each change.
           -	# See http://www.iana.org/assignments/character-sets for the
           -	# official list of charset names and their respective RFCs.
           -	#
           -	AddCharset us-ascii	.ascii .us-ascii
           -	AddCharset ISO-8859-1  .iso8859-1  .latin1
           -	AddCharset ISO-8859-2  .iso8859-2  .latin2 .cen
           -	AddCharset ISO-8859-3  .iso8859-3  .latin3
           -	AddCharset ISO-8859-4  .iso8859-4  .latin4
           -	AddCharset ISO-8859-5  .iso8859-5  .cyr .iso-ru
           -	AddCharset ISO-8859-6  .iso8859-6  .arb .arabic
           -	AddCharset ISO-8859-7  .iso8859-7  .grk .greek
           -	AddCharset ISO-8859-8  .iso8859-8  .heb .hebrew
           -	AddCharset ISO-8859-9  .iso8859-9  .latin5 .trk
           -	AddCharset ISO-8859-10  .iso8859-10  .latin6
           -	AddCharset ISO-8859-13  .iso8859-13
           -	AddCharset ISO-8859-14  .iso8859-14  .latin8
           -	AddCharset ISO-8859-15  .iso8859-15  .latin9
           -	AddCharset ISO-8859-16  .iso8859-16  .latin10
           -	AddCharset ISO-2022-JP .iso2022-jp .jis
           -	AddCharset ISO-2022-KR .iso2022-kr .kis
           -	AddCharset ISO-2022-CN .iso2022-cn .cis
           -	AddCharset Big5		.Big5	   .big5 .b5
           -	AddCharset cn-Big5	 .cn-big5
           -	# For russian, more than one charset is used (depends on client, mostly):
           -	AddCharset WINDOWS-1251 .cp-1251   .win-1251
           -	AddCharset CP866	   .cp866
           -	AddCharset KOI8	  .koi8
           -	AddCharset KOI8-E	  .koi8-e
           -	AddCharset KOI8-r	  .koi8-r .koi8-ru
           -	AddCharset KOI8-U	  .koi8-u
           -	AddCharset KOI8-ru	 .koi8-uk .ua
           -	AddCharset ISO-10646-UCS-2 .ucs2
           -	AddCharset ISO-10646-UCS-4 .ucs4
           -	AddCharset UTF-7	   .utf7
           -	AddCharset UTF-8	   .utf8
           -	AddCharset UTF-16	  .utf16
           -	AddCharset UTF-16BE	.utf16be
           -	AddCharset UTF-16LE	.utf16le
           -	AddCharset UTF-32	  .utf32
           -	AddCharset UTF-32BE	.utf32be
           -	AddCharset UTF-32LE	.utf32le
           -	AddCharset euc-cn	  .euc-cn
           -	AddCharset euc-gb	  .euc-gb
           -	AddCharset euc-jp	  .euc-jp
           -	AddCharset euc-kr	  .euc-kr
           -	#Not sure how euc-tw got in - IANA doesn't list it???
           -	AddCharset EUC-TW	  .euc-tw
           -	AddCharset gb2312	  .gb2312 .gb
           -	AddCharset iso-10646-ucs-2 .ucs-2 .iso-10646-ucs-2
           -	AddCharset iso-10646-ucs-4 .ucs-4 .iso-10646-ucs-4
           -	AddCharset shift_jis   .shift_jis .sjis
           -	AddCharset BRF		 .brf
           +  #
           +  # Commonly used filename extensions to character sets. You probably
           +  # want to avoid clashes with the language extensions, unless you
           +  # are good at carefully testing your setup after each change.
           +  # See http://www.iana.org/assignments/character-sets for the
           +  # official list of charset names and their respective RFCs.
           +  #
           +  AddCharset us-ascii    .ascii .us-ascii
           +  AddCharset ISO-8859-1  .iso8859-1  .latin1
           +  AddCharset ISO-8859-2  .iso8859-2  .latin2 .cen
           +  AddCharset ISO-8859-3  .iso8859-3  .latin3
           +  AddCharset ISO-8859-4  .iso8859-4  .latin4
           +  AddCharset ISO-8859-5  .iso8859-5  .cyr .iso-ru
           +  AddCharset ISO-8859-6  .iso8859-6  .arb .arabic
           +  AddCharset ISO-8859-7  .iso8859-7  .grk .greek
           +  AddCharset ISO-8859-8  .iso8859-8  .heb .hebrew
           +  AddCharset ISO-8859-9  .iso8859-9  .latin5 .trk
           +  AddCharset ISO-8859-10  .iso8859-10  .latin6
           +  AddCharset ISO-8859-13  .iso8859-13
           +  AddCharset ISO-8859-14  .iso8859-14  .latin8
           +  AddCharset ISO-8859-15  .iso8859-15  .latin9
           +  AddCharset ISO-8859-16  .iso8859-16  .latin10
           +  AddCharset ISO-2022-JP .iso2022-jp .jis
           +  AddCharset ISO-2022-KR .iso2022-kr .kis
           +  AddCharset ISO-2022-CN .iso2022-cn .cis
           +  AddCharset Big5        .Big5       .big5 .b5
           +  AddCharset cn-Big5     .cn-big5
           +  # For russian, more than one charset is used (depends on client, mostly):
           +  AddCharset WINDOWS-1251 .cp-1251   .win-1251
           +  AddCharset CP866       .cp866
           +  AddCharset KOI8      .koi8
           +  AddCharset KOI8-E      .koi8-e
       +  AddCharset KOI8-r      .koi8-r .koi8-ru
           +  AddCharset KOI8-U      .koi8-u
           +  AddCharset KOI8-ru     .koi8-uk .ua
           +  AddCharset ISO-10646-UCS-2 .ucs2
           +  AddCharset ISO-10646-UCS-4 .ucs4
           +  AddCharset UTF-7       .utf7
           +  AddCharset UTF-8       .utf8
           +  AddCharset UTF-16      .utf16
       +  AddCharset UTF-16BE    .utf16be
           +  AddCharset UTF-16LE    .utf16le
           +  AddCharset UTF-32      .utf32
           +  AddCharset UTF-32BE    .utf32be
       +  AddCharset UTF-32LE    .utf32le
           +  AddCharset euc-cn      .euc-cn
           +  AddCharset euc-gb      .euc-gb
           +  AddCharset euc-jp      .euc-jp
           +  AddCharset euc-kr      .euc-kr
           +  #Not sure how euc-tw got in - IANA doesn't list it???
           +  AddCharset EUC-TW      .euc-tw
           +  AddCharset gb2312      .gb2312 .gb
           +  AddCharset iso-10646-ucs-2 .ucs-2 .iso-10646-ucs-2
           +  AddCharset iso-10646-ucs-4 .ucs-4 .iso-10646-ucs-4
           +  AddCharset shift_jis   .shift_jis .sjis
            
       -	#
           -	# AddHandler allows you to map certain file extensions to "handlers":
           -	# actions unrelated to filetype. These can be either built into the server
           -	# or added with the Action directive (see below)
           -	#
           -	# To use CGI scripts outside of ScriptAliased directories:
           -	# (You will also need to add "ExecCGI" to the "Options" directive.)
           -	#
           -	#AddHandler cgi-script .cgi
           +  #
       
           +  # actions unrelated to filetype. These can be either built into the server
           +  # or added with the Action directive (see below)
           +  #
           +  # To use CGI scripts outside of ScriptAliased directories:
           +  # (You will also need to add "ExecCGI" to the "Options" directive.)
           +  #
       +  #AddHandler cgi-script .cgi
            
           -	#
       -	# For files that include their own HTTP headers:
           -	#
           -	#AddHandler send-as-is asis
           +  #
           +  # For files that include their own HTTP headers:
           +  #
           +  #AddHandler send-as-is asis
            
           -	#
       	# For server-parsed imagemap files:
           -	#
           -	#AddHandler imap-file map
           +  #
           +  # For server-parsed imagemap files:
           +  #
           +  #AddHandler imap-file map
            
           -	#
           -	# For type maps (negotiated resources):
           -	# (This is enabled by default to allow the Apache "It Worked" page
       -	#  to be distributed in multiple languages.)
           -	#
           -	AddHandler type-map var
           +  #
           +  # For type maps (negotiated resources):
           +  # (This is enabled by default to allow the Apache "It Worked" page
           +  #  to be distributed in multiple languages.)
           +  #
           +  AddHandler type-map var
            
       -	#
           -	# Filters allow you to process content before it is sent to the client.
           -	#
           -	# To parse .shtml files for server-side includes (SSI):
           -	# (You will also need to add "Includes" to the "Options" directive.)
           -	#
           -	AddType text/html .shtml
       	AddOutputFilter INCLUDES .shtml
       
           +  #
           +  # Filters allow you to process content before it is sent to the client.
           +  #
           +  # To parse .shtml files for server-side includes (SSI):
           +  # (You will also need to add "Includes" to the "Options" directive.)
           +  #
           +  AddType text/html .shtml
           +  AddOutputFilter INCLUDES .shtml
            </IfModule>
       -
       
         * file[/etc/apache2/mods-available/mime.load] action create (up to date)
         * execute[a2enmod mime] action run (skipped due to not_if)
       Recipe: apache2::mod_negotiation
         * template[/etc/apache2/mods-available/negotiation.conf] action create
           - update content in file /etc/apache2/mods-available/negotiation.conf from 0649b6 to 3ad8fd
           --- /etc/apache2/mods-available/negotiation.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.negotiation.conf20160213-1410-rkybo4	2016-02-13 23:37:47.017457114 +0000
           @@ -1,21 +1,18 @@
            <IfModule mod_negotiation.c>
           +  #
           +  # LanguagePriority allows you to give precedence to some languages
           +  # in case of a tie during content negotiation.
           +  #
           +  # Just list the languages in decreasing order of preference. We have
           +  # more or less alphabetized them here. You probably want to change this.
           +  #
           +  LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv tr zh-CN zh-TW
            
           -	# LanguagePriority allows you to give precedence to some languages
           -	# in case of a tie during content negotiation.
           -	#
       -	# Just list the languages in decreasing order of preference. We have
           -	# more or less alphabetized them here. You probably want to change this.
           -	#
           -	LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv tr zh-CN zh-TW
           -
           -	#
           -	# ForceLanguagePriority allows you to serve a result page rather than
           -	# MULTIPLE CHOICES (Prefer) [in case of a tie] or NOT ACCEPTABLE (Fallback)
           -	# [in case no accepted languages matched the available variants]
           -	#
       	ForceLanguagePriority Prefer Fallback
           -
           +  #
           +  # ForceLanguagePriority allows you to serve a result page rather than
           +  # MULTIPLE CHOICES (Prefer) [in case of a tie] or NOT ACCEPTABLE (Fallback)
           +  # [in case no accepted languages matched the available variants]
       
           +  ForceLanguagePriority Prefer Fallback
            </IfModule>
           -
       
         * file[/etc/apache2/mods-available/negotiation.load] action create (up to date)
         * execute[a2enmod negotiation] action run (skipped due to not_if)
       Recipe: apache2::mod_setenvif
         * template[/etc/apache2/mods-available/setenvif.conf] action create
           - update content in file /etc/apache2/mods-available/setenvif.conf from 56aca4 to fb5a27
           --- /etc/apache2/mods-available/setenvif.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.setenvif.conf20160213-1410-6d9iil	2016-02-13 23:37:47.033457115 +0000
           @@ -1,33 +1,29 @@
            <IfModule mod_setenvif.c>
           +  #
           +  # The following directives modify normal HTTP response behavior to
           +  # handle known problems with browser implementations.
           +  #
           +  BrowserMatch "Mozilla/2" nokeepalive
           +  BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0
           +  BrowserMatch "RealPlayer 4\.0" force-response-1.0
           +  BrowserMatch "Java/1\.0" force-response-1.0
           +  BrowserMatch "JDK/1\.0" force-response-1.0
            
       -	#
           -	# The following directives modify normal HTTP response behavior to
           -	# handle known problems with browser implementations.
           -	#
           -	BrowserMatch "Mozilla/2" nokeepalive
           -	BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0
           -	BrowserMatch "RealPlayer 4\.0" force-response-1.0
           -	BrowserMatch "Java/1\.0" force-response-1.0
           -	BrowserMatch "JDK/1\.0" force-response-1.0
           -
       -	#
           -	# The following directive disables redirects on non-GET requests for
           -	# a directory that does not include the trailing slash.  This fixes a
           -	# problem with Microsoft WebFolders which does not appropriately handle
           -	# redirects for folders with DAV methods.
           -	# Same deal with Apple's DAV filesystem and Gnome VFS support for DAV.
           -	#
       -	BrowserMatch "Microsoft Data Access Internet Publishing Provider" redirect-carefully
           -	BrowserMatch "MS FrontPage" redirect-carefully
           -	BrowserMatch "^WebDrive" redirect-carefully
           -	BrowserMatch "^WebDAVFS/1.[012]" redirect-carefully
           -	BrowserMatch "^gnome-vfs/1.0" redirect-carefully
           -	BrowserMatch "^gvfs/1" redirect-carefully
           -	BrowserMatch "^XML Spy" redirect-carefully
           -	BrowserMatch "^Dreamweaver-WebDAV-SCM1" redirect-carefully
           -	BrowserMatch " Konqueror/4" redirect-carefully
       
           +  #
           +  # The following directive disables redirects on non-GET requests for
           +  # a directory that does not include the trailing slash.  This fixes a
           +  # problem with Microsoft WebFolders which does not appropriately handle
           +  # redirects for folders with DAV methods.
       
           +  #
           +  BrowserMatch "Microsoft Data Access Internet Publishing Provider" redirect-carefully
           +  BrowserMatch "MS FrontPage" redirect-carefully
           +  BrowserMatch "^WebDrive" redirect-carefully
           +  BrowserMatch "^WebDAVFS/1.[012]" redirect-carefully
           +  BrowserMatch "^gnome-vfs/1.0" redirect-carefully
           +  BrowserMatch "^gvfs/1" redirect-carefully
           +  BrowserMatch "^XML Spy" redirect-carefully
       +  BrowserMatch "^Dreamweaver-WebDAV-SCM1" redirect-carefully
           +  BrowserMatch " Konqueror/4" redirect-carefully
            </IfModule>
           -
       
         * file[/etc/apache2/mods-available/setenvif.load] action create (up to date)
         * execute[a2enmod setenvif] action run (skipped due to not_if)
       Recipe: apache2::default
         * service[apache2] action enable (up to date)
         * service[apache2] action start (up to date)
       Recipe: apache2::mod_rewrite
         * file[/etc/apache2/mods-available/rewrite.load] action create (up to date)
         * execute[a2enmod rewrite] action run (skipped due to not_if)
       Recipe: apache2::mod_deflate
         * template[/etc/apache2/mods-available/deflate.conf] action create
           - update content in file /etc/apache2/mods-available/deflate.conf from 7c5c22 to c8749f
           --- /etc/apache2/mods-available/deflate.conf	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.deflate.conf20160213-1410-5qqra3	2016-02-13 23:37:47.253457124 +0000
           @@ -1,15 +1,19 @@
            <IfModule mod_deflate.c>
           -	<IfModule mod_filter.c>
           -		# these are known to be safe with MSIE 6
           -		AddOutputFilterByType DEFLATE text/html text/plain text/xml
           +  <IfModule mod_filter.c>
           +     # these are known to be safe with MSIE 6
       
            
           -		# everything else may cause problems with MSIE 6
           -		AddOutputFilterByType DEFLATE text/css
           -		AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/ecmascript
           -		AddOutputFilterByType DEFLATE application/rss+xml
           -		AddOutputFilterByType DEFLATE application/xml
           -	</IfModule>
           +     # everything else may cause problems with MSIE 6
       +     AddOutputFilterByType DEFLATE text/css
           +     AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/ecmascript
           +     AddOutputFilterByType DEFLATE application/rss+xml
           +     AddOutputFilterByType DEFLATE application/xml
           +     AddOutputFilterByType DEFLATE application/xhtml+xml
       +     AddOutputFilterByType DEFLATE image/svg+xml
           +     AddOutputFilterByType DEFLATE application/atom_xml
           +     AddOutputFilterByType DEFLATE application/x-httpd-php
           +     AddOutputFilterByType DEFLATE application/x-httpd-fastphp
           +     AddOutputFilterByType DEFLATE application/x-httpd-eruby
           +  </IfModule>
        </IfModule>
           -
       
         * file[/etc/apache2/mods-available/deflate.load] action create
           - update content in file /etc/apache2/mods-available/deflate.load from 82ba90 to a9a45c
           --- /etc/apache2/mods-available/deflate.load	2014-01-03 14:48:41.000000000 +0000
           +++ /etc/apache2/mods-available/.deflate.load20160213-1410-wwa5kc	2016-02-13 23:37:47.269457124 +0000
           @@ -1,3 +1,2 @@
           -# Depends: filter
            LoadModule deflate_module /usr/lib/apache2/modules/mod_deflate.so
         * execute[a2enmod deflate] action run (skipped due to not_if)
       Recipe: apache2::mod_headers
         * file[/etc/apache2/mods-available/headers.load] action create (up to date)
         * execute[a2enmod headers] action run
           - execute /usr/sbin/a2enmod headers
       Recipe: patchdashboard::_apache
       
           - create new file /etc/apache2/sites-available/patchdashboard.conf
           - update content in file /etc/apache2/sites-available/patchdashboard.conf from none to 7f45cb
           --- /etc/apache2/sites-available/patchdashboard.conf	2016-02-13 23:37:47.337457127 +0000
           +++ /etc/apache2/sites-available/.patchdashboard.conf20160213-1410-1lye3ic	2016-02-13 23:37:47.337457127 +0000
           @@ -1 +1,39 @@
           +<VirtualHost *:80>
           +  ServerName []
           +  DocumentRoot 
           +
           +  <Directory >
           +    Options FollowSymLinks
           +    AllowOverride None
           +    Require all granted
           +  </Directory>
           +
           +  <Directory />
           +    Options FollowSymLinks
       +    AllowOverride None
           +  </Directory>
           +
           +  <Location /server-status>
           +    SetHandler server-status
           +
           +    Require local
           +
           +  </Location>
           +
           +  RewriteEngine On
           +  LogLevel info rewrite:trace1
           +
           +  ErrorLog /var/log/apache2/patchdashboard-error.log
           +  CustomLog /var/log/apache2/patchdashboard-access.log combined
           +
           +
           +  # Canonical host, []
           +  RewriteCond %{HTTP_HOST}   !^[] [NC]
       
           +  RewriteRule ^/(.*)$        http://[]/$1 [L,R=301]
           +
           +  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
           +  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
           +  RewriteRule ^.*$ /system/maintenance.html [L,R=503]
       
           - change mode from '' to '0644'
           - change owner from '' to 'root'
           - change group from '' to 'root'
         * execute[a2ensite patchdashboard.conf] action run
           - execute /usr/sbin/a2ensite patchdashboard.conf
       Recipe: apache2::default
        (skipped due to only_if)
        (skipped due to only_if)
       
       Running handlers:
       Running handlers complete
       
       Deprecated features used!
         Default value "*" is invalid for property minute of resource cron_d. In Chef 13 this will become an error: undefined method `validate_numeric' for #<Class:0x00000001f095f0>. at 1 location:
           - /tmp/kitchen/cookbooks/cron/resources/d.rb:27:in `class_from_file'
         Default value "*" is invalid for property hour of resource cron_d. In Chef 13 this will become an error: undefined method `validate_numeric' for #<Class:0x00000001f095f0>. at 1 location:
           - /tmp/kitchen/cookbooks/cron/resources/d.rb:28:in `class_from_file'
         Default value "*" is invalid for property day of resource cron_d. In Chef 13 this will become an error: undefined method `validate_numeric' for #<Class:0x00000001f095f0>. at 1 location:
           - /tmp/kitchen/cookbooks/cron/resources/d.rb:29:in `class_from_file'
         Default value "*" is invalid for property month of resource cron_d. In Chef 13 this will become an error: undefined method `validate_month' for #<Class:0x00000001f095f0>. at 1 location:
           - /tmp/kitchen/cookbooks/cron/resources/d.rb:30:in `class_from_file'
         Default value "*" is invalid for property weekday of resource cron_d. In Chef 13 this will become an error: undefined method `validate_dow' for #<Class:0x00000001f095f0>. at 1 location:
           - /tmp/kitchen/cookbooks/cron/resources/d.rb:31:in `class_from_file'
         Default value "Evolving" is invalid for property stability of resource smf. In Chef 13 this will become an error: Option stability must be equal to one of: Standard Stable Evolving Unstable External Obsolete!  You passed "Evolving".. at 1 location:
       
       
       Chef Client finished, 44/103 resources updated in 09 seconds
       Finished converging <default-ubuntu-1404> (0m32.76s).
-----> Kitchen is finished. (2m43.11s)
